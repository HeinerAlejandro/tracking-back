{"version":3,"sources":["components/UserInterface/DefaultFooter.js","hooks/authorizationHook.js","components/DeviceSection/FieldSearch/index.js","components/DeviceSection/DeviceList/DeviceItemTable/Item.js","components/DeviceSection/DeviceList/DeviceItemTable/index.js","components/DeviceSection/DeviceList/layouts/TableLayout/index.js","components/DeviceSection/DeviceList/layouts/TableLayout/Header.js","components/DeviceSection/DeviceList/layouts/TableLayout/Body.js","components/DeviceSection/DeviceList/layouts/DropdownLayout/index.js","components/DeviceSection/DeviceList/index.js","components/DeviceSection/ButtonsOperation.js","components/DeviceSection/index.js","views/UserInterfacePage/SectionDevicesView.js","components/SectionDeviceRegister/FormDevice/index.js","components/SectionDeviceRegister/index.js","views/UserInterfacePage/FormDeviceView.js","components/Map/IconMarker.js","components/Map/index.js","components/OperationSection/SectionValueToMap.js","components/OperationSection/SectionTracking/panelOptions.js","components/OperationSection/SectionTracking/index.js","views/UserInterfacePage/OperationSectionView/SectionTrackingView/index.js","components/OperationSection/SectionValueInModule.js","components/OperationSection/index.js","views/UserInterfacePage/OperationSectionView/index.js","components/Dashboard/Dashboard.js"],"names":["DefaultFooter","_this$props","this","props","children","Object","C_Users_Wilmer_preact_tracking_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","Fragment","Component","defaultProps","authorizationHook","WrapComponent","authorizationComponent","_Component","C_Users_Wilmer_preact_tracking_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","C_Users_Wilmer_preact_tracking_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Wilmer_preact_tracking_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","apply","arguments","C_Users_Wilmer_preact_tracking_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","C_Users_Wilmer_preact_tracking_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","isSuperuser","react__WEBPACK_IMPORTED_MODULE_7___default","antd_es_icon__WEBPACK_IMPORTED_MODULE_1__","type","connect","state","data_user","role","Search","input","Option","es_select","SearchField","react_default","defaultValue","id","style","width","marginBottom","size","onChange","handleFilter","placeholder","envolveTd","data","Item","_ref","values","_ref$forDefault","forDefault","_ref$optionStyle","optionStyle","toRender","console","log","Array","isArray","toSelect","name","className","envolveSelect","map","styles","Item_Option","DeviceItemTable","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","selectDevice","getItemChildrenLayoutRenderDevice","bind","assertThisInitialized","getDataOptionDevice","getDataColumnsDevice","DeviceItemTable_Option","_this$props2","SelectOp","Item_Item","typee","date_register","status","es_button","disabled","onClick","background","border","icon","data_render","TableLayout","reactstrap_es","responsive","striped","Header","Body","DropdownLayout","selected","DeviceList","getColumnsDevices","columns_header","columnOperation","column","getDevices","devices","deviceOperation","getSimpleList","devices_name","getItem","device","DeviceList_DeviceItemTable","filter","getTable","getSelect","Data","PureComponent","ButtonsOperation","color","fontColor","backgroundColor","borderColor","DeviceSection","getColums","handleClickRegister","visible_form","setVisibleForm","getButtonsOperations","row","gutter","col","span","DeviceSection_ButtonsOperation","getCardTable","margin","FieldSearch","handleChangeSearch","DeviceSection_DeviceList","card","visible","SectionDevicesView","componentDidMount","getDevicesFromServer","target","setFilterSearchDevice","isDeviceInList","regex","filter_search","toUpperCase","search","toPairs","length","src_components_DeviceSection","mapDispatchToProps","setDevices","visible_form_device","es_form","SectionDeviceRegister_FormDevice","tooltip","title","FormDevice_Option","create","onHandleSubmit","onSubmit","FormDevice_Item","maxLength","htmlType","SectionDeviceRegister","onCancel","modal","centered","footer","align","onSubmitDevice","FormDeviceView","e","preventDefault","document","getElementsByName","fetchCreateDevice","SectionDeviceRegister_SectionDeviceRegister","React","library","add","faMapMarker","faTabletAlt","colorMarker","RandomColor","IconMarker","react_fontawesome_index_es","position","bottom","left","iconMarkup","renderToStaticMarkup","optionRender","divIcon","html","MapDevices","positions","coordenate","lat","lon","Map","center","zoom","TileLayer","url","Marker","Popup","Polyline","SectionValueToMap","offset","components_Map","panelOptions","handleChangeDateTime","htmlFor","xs","md","lg","xl","panel","SectionTracking","justify","SectionTracking_panelOptions","SectionTrackingView","componentWillMount","prevProps","nextProps","getLastPosition","validateRangeDate","RegExp","test","firstDateTime","secondDateTime","setDeviceRanges","obtainDate","date","Date","obtainSplitDate","split","datetime","datePosition","first","final","forceUpdate","validInput","evt","isFullInputsDate","isValidRangeDates","getIntervalPosition","getArrayDevices","addRanges","OperationSection_SectionTracking","device_selected","SectionValueInModule","TabPane","tabs","Module","OperationSection","device_name","data_device","defaultTabPane","defaultActiveKey","activeKey","_ref2","default_activate","type_device","tab","es_icon","OperationSectionView","components_OperationSection","Dashboard","loading","UserInterfacePage_SectionDevicesView","sm","UserInterfacePage_FormDeviceView","UserInterfacePage_OperationSectionView"],"mappings":"sKASMA,mLACK,IAAAC,EAG6BC,KAAKC,MAHlCF,EAGCG,SAHDC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,cAKP,OACEM,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACCH,EAAAC,EAAAC,cAAA,2BARqBE,aAe5BX,EAAcY,aAjBO,GAmBNZ,gICHAa,IAnBW,SAAAC,GAAiB,IACjCC,EADiC,SAAAC,GAAA,SAAAD,IAAA,OAAAV,OAAAY,EAAA,EAAAZ,CAAAH,KAAAa,GAAAV,OAAAa,EAAA,EAAAb,CAAAH,KAAAG,OAAAc,EAAA,EAAAd,CAAAU,GAAAK,MAAAlB,KAAAmB,YAAA,OAAAhB,OAAAiB,EAAA,EAAAjB,CAAAU,EAAAC,GAAAX,OAAAkB,EAAA,EAAAlB,CAAAU,EAAA,EAAAS,IAAA,SAAAC,MAAA,WAM/B,OAFmBvB,KAAKC,MAAMuB,aAGXC,EAAAnB,EAAAC,cAACK,EAAkBZ,KAAKC,QAAcwB,EAAAnB,EAAAC,cAAAmB,EAAA,GAAMC,KAAO,gBAPvCd,EAAA,CACFJ,aAerC,OAAOmB,YAJiB,SAAAC,GAAK,MAAK,CAC9BL,YAAcK,EAAMC,UAAUC,OAGF,KAAzBH,CAA+Bf,sPChBpCmB,UAASC,EAAA,EAAMD,QACfE,EAASC,EAAA,EAAOD,OA4BPE,GAxBXC,EAAA/B,EAAAC,cAAA4B,EAAA,GACIG,aAAe,KACfD,EAAA/B,EAAAC,cAAC2B,EAAD,CAAQX,MAAQ,KAAhB,KAGAc,EAAA/B,EAAAC,cAAC2B,EAAD,CAAQX,MAAQ,KAAhB,KAGAc,EAAA/B,EAAAC,cAAC2B,EAAD,CAAQX,MAAQ,KAAhB,MAMY,SAAAtB,GAAK,OACjBoC,EAAA/B,EAAAC,cAACyB,EAAD,CACIO,GAAK,oBACLC,MAAS,CAACC,MAAO,IAAKC,aAAc,IACpCC,KAAO,QACPC,SAAa3C,EAAM4C,aACnBC,YAAc,iEC1BpBZ,EAASC,EAAA,EAAOD,OAEhBa,EAAY,SAAAC,GAAI,OAClBX,EAAA/B,EAAAC,cAAA,UACKyC,IA0BIC,EAAO,SAAAC,GAA2D,IAAzDvB,EAAyDuB,EAAzDvB,KAAMwB,EAAmDD,EAAnDC,OAAmDC,EAAAF,EAA3CG,kBAA2C,IAAAD,EAA9B,KAA8BA,EAAAE,EAAAJ,EAAxBK,mBAAwB,IAAAD,EAAV,KAAUA,EACvEE,EAAW,KAOf,GALAC,QAAQC,IAAIP,GACA,WAATxB,GAAuC,kBAAXwB,IAC3BK,EAAWT,EAAUI,IAGb,WAATxB,GAAqBgC,MAAMC,QAAQT,IAAWE,EAAW,CAExD,IAMIQ,EA7BU,SAACb,EAAMK,GAAP,OAClBhB,EAAA/B,EAAAC,cAAA4B,EAAA,GACIK,MAAS,CAAEC,MAAQ,KACnBH,aAAiBe,EACjBS,KAAK,SACLC,UAAU,UAGZf,GAqBiBgB,CANKb,EAAOc,IAAI,SAAA1C,GAC3B,IAjCUyB,EAAMkB,EAmChB,OAnCUlB,EAiCgBzB,EAjCV2C,EAiCiBX,EAhCzClB,EAAA/B,EAAAC,cAAC4D,EAAD,CACI5C,MAAUyB,EACVR,MAAU0B,GAETlB,KAiC2CK,GAE5CG,EAAWT,EAAUc,GAGzB,OAAOL,GCjDLtB,EAASC,EAAA,EAAOD,OAsHPkC,cA9Gb,SAAAA,EAAYnE,GAAM,IAAAoE,EAAA,OAAAlE,OAAAmE,EAAA,EAAAnE,CAAAH,KAAAoE,IAChBC,EAAAlE,OAAAoE,EAAA,EAAApE,CAAAH,KAAAG,OAAAqE,EAAA,EAAArE,CAAAiE,GAAAK,KAAAzE,KAAMC,KAwBRyE,YAAc,WAAM,IAAA3E,EACasE,EAAKpE,MAA5B6D,EADU/D,EACV+D,MAERa,EAHkB5E,EACJ4E,cAEDb,IAzBbO,EAAKO,kCAAoCP,EAAKO,kCAAkCC,KAAvC1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KAEzCA,EAAKU,oBAAsBV,EAAKU,oBAAoBF,KAAzB1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KAC3BA,EAAKW,qBAAuBX,EAAKW,qBAAqBH,KAA1B1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KAE5BA,EAAKK,YAAcL,EAAKK,YAAYG,KAAjB1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KARHA,qFAWG,IAEXP,EAAS9D,KAAKC,MAAd6D,KAER,OACEzB,EAAA/B,EAAAC,cAAC0E,EAAD,CACE3D,IAAQwC,EACRvC,MAAUuC,GAERA,kDAWc,IAAAoB,EAEGlF,KAAKC,MAApB+C,EAFYkC,EAEZlC,KAAMc,EAFMoB,EAENpB,KAuBRqB,EAAWxE,YAAkBsC,GAEnC,OAEEZ,EAAA/B,EAAAC,cAAA8B,EAAA/B,EAAAE,SAAA,KACE6B,EAAA/B,EAAAC,cAAC6E,EAAD,CACEzD,KAAO,SACPwB,OAAWW,IAEbzB,EAAA/B,EAAAC,cAAC6E,EAAD,CACEzD,KAAO,SACPwB,OAAWH,EAAKqC,QAElBhD,EAAA/B,EAAAC,cAAC6E,EAAD,CACEzD,KAAO,SACPwB,OAAWH,EAAKsC,gBAGlBjD,EAAA/B,EAAAC,cAAC4E,EAAD,CACExD,KAAO,SACP0B,WAAcL,EAAKuC,OACnBhC,YAAe,CAAEd,MAAQ,SACzBU,OAAW,CAAC,SAAU,cAIxBd,EAAA/B,EAAAC,cAAA,UACE8B,EAAA/B,EAAAC,cAAAiF,EAAA,GACEC,SAA6B,WAAhBzC,EAAKuC,OAClBG,QAAY1F,KAAK0E,YACjBlC,MAAS,CAAEmD,WAAa,OAAQC,OAAQ,QACxCC,KAAO,sEAQf,MAA2B,cAApB7F,KAAKC,MAAM0B,KACd3B,KAAKgF,uBACLhF,KAAK+E,uDAITtB,QAAQC,IAAI1D,KAAKC,MAAM0B,MACvB,IAAMmE,EAAc9F,KAAK4E,oCAEzB,OACEvC,EAAA/B,EAAAC,cAAA8B,EAAA/B,EAAAE,SAAA,KAAIsF,UA3GoBrF,sBCNxBsF,EAAc,SAAA7C,GAAA,IAAGhD,EAAHgD,EAAGhD,SAAH,OAChBmC,EAAA/B,EAAAC,cAACyF,EAAA,EAAD,CAAOC,YAAU,EAACC,SAAO,GACnBhG,IAIV6F,EAAYI,OCTG,SAAAjD,GAAA,IAAGhD,EAAHgD,EAAGhD,SAAH,OACXmC,EAAA/B,EAAAC,cAAA,aACI8B,EAAA/B,EAAAC,cAAA,UACML,KDOd6F,EAAYK,KEVC,SAAAlD,GAAA,IAAGhD,EAAHgD,EAAGhD,SAAH,OACTmC,EAAA/B,EAAAC,cAAA,aACML,IFUK6F,QGGAM,EAbQ,SAACpG,GAEpB,OACIoC,EAAA/B,EAAAC,cAAA4B,EAAA,GACIS,SAAa3C,EAAM0E,aACnBb,KAAO,gBACPvB,GAAK,gBACLD,aAAiBrC,EAAMqG,UACrBrG,EAAMC,WCuFLqG,cA3Fb,SAAAA,EAAYtG,GAAM,IAAAoE,EAAA,OAAAlE,OAAAmE,EAAA,EAAAnE,CAAAH,KAAAuG,IAEhBlC,EAAAlE,OAAAoE,EAAA,EAAApE,CAAAH,KAAAG,OAAAqE,EAAA,EAAArE,CAAAoG,GAAA9B,KAAAzE,KAAMC,KAcRuG,kBAAoB,kBAClBnC,EAAKpE,MAAMwG,gBAAkBpC,EAAKpE,MAAMwG,eAAexC,IAAII,EAAKqC,kBAjBhDrC,EAoBlBqC,gBAAkB,SAAAC,GAAM,OAAKtE,EAAA/B,EAAAC,cAAA,MAAIe,IAAOqF,GAAUA,IApBhCtC,EAsBlBuC,WAAa,kBACXvC,EAAKpE,MAAM4G,SAAWxC,EAAKpE,MAAM4G,QAAQ5C,IAAII,EAAKyC,kBAvBlCzC,EA0BlB0C,cAAgB,SAACC,GAAD,OACd3E,EAAA/B,EAAAC,cAAA4B,EAAA,EAAQD,OAAR,CAAeX,MAAUyF,GAAiBA,IA3B1B3C,EA8BlB4C,QAAU,SAAAC,GACR,MACsB,UAApB7C,EAAKpE,MAAM0B,KAAkBU,EAAA/B,EAAAC,cAAC4G,EAAD,CACzBxC,aAAiBN,EAAKpE,MAAM0E,aAC5BrD,IAAQ4F,EAAO,GACfpD,KAASoD,EAAO,GAChBlE,KAASkE,EAAO,GAChBvF,KAAS,OAAS0C,EAAKpE,MAAM0B,OAC3B0C,EAAK0C,cAAcG,EAAO,KAtClB7C,EA0ClByC,gBAAkB,SAAAI,GAChB,IAAIjE,EAAO,KAKX,OAHIoB,EAAKpE,MAAMmH,QAAWF,EAAO,GAAG,KAAO7C,EAAKpE,MAAMmH,SACpDnE,EAAOoB,EAAK4C,QAAQC,IAEM,UAArB7C,EAAKpE,MAAM0B,KACdU,EAAA/B,EAAAC,cAAA,UAAM0C,GACNA,GAlDYoB,EAqDlBgD,SAAW,SAAAtB,GAAW,OACpB1D,EAAA/B,EAAAC,cAACwF,EAAD,KACE1D,EAAA/B,EAAAC,cAACwF,EAAYI,OAAb,KACI9B,EAAKmC,qBAETnE,EAAA/B,EAAAC,cAACwF,EAAYK,KAAb,KACI/B,EAAKuC,gBA3DKvC,EAgElBiD,UAAY,SAAAjB,GAAc,OACxBhE,EAAA/B,EAAAC,cAAC8F,EAAD,CACE1B,aAAiBN,EAAKpE,MAAM0E,aAC5B2B,SAAajC,EAAKpE,MAAMqG,UAEtBjC,EAAKuC,eAjETvC,EAAKmC,kBAAoBnC,EAAKmC,kBAAkB3B,KAAvB1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KACzBA,EAAKqC,gBAAkBrC,EAAKqC,gBAAgB7B,KAArB1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KAEvBA,EAAKuC,WAAavC,EAAKuC,WAAW/B,KAAhB1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KAClBA,EAAKyC,gBAAkBzC,EAAKyC,gBAAgBjC,KAArB1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KAEvBA,EAAKgD,SAAWhD,EAAKgD,SAASxC,KAAd1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KAChBA,EAAKiD,UAAYjD,EAAKiD,UAAUzC,KAAf1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KAEjBA,EAAK4C,QAAU5C,EAAK4C,QAAQpC,KAAb1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KAbCA,wEA2EhB,IAAIkD,EAAO,KAUX,MARuB,UAApBvH,KAAKC,MAAM0B,KAEZ4F,EAAOvH,KAAKqH,SAAStB,GAEK,WAApB/F,KAAKC,MAAM0B,OAEjB4F,EAAOvH,KAAKsH,UAAUjB,IAGtBhE,EAAA/B,EAAAC,cAAA8B,EAAA/B,EAAAE,SAAA,KAAI+G,UAxFeC,iBCUVC,EAbU,SAAAvE,GAAA,IAAG2C,EAAH3C,EAAG2C,KAAM6B,EAATxE,EAASwE,MAAOnG,EAAhB2B,EAAgB3B,MAAOmE,EAAvBxC,EAAuBwC,QAAS/D,EAAhCuB,EAAgCvB,KAAMgG,EAAtCzE,EAAsCyE,UAAtC,OACrBtF,EAAA/B,EAAAC,cAAAiF,EAAA,GACIhD,MAAS,CAAEoF,gBAAkBF,EAAOA,MAAQC,EAAWE,YAAaH,GACpE/E,KAAO,QACPhB,KAASA,EACTkE,KAASA,EACTH,QAAYA,GAGVnE,IC4FKuG,cA7Fb,SAAAA,EAAY7H,GAAM,IAAAoE,EAAA,OAAAlE,OAAAmE,EAAA,EAAAnE,CAAAH,KAAA8H,IAEhBzD,EAAAlE,OAAAoE,EAAA,EAAApE,CAAAH,KAAAG,OAAAqE,EAAA,EAAArE,CAAA2H,GAAArD,KAAAzE,KAAMC,KAQR8H,UAAY,kBACV1D,EAAKpE,MAAM8B,KACP,CACA,SACA,OACA,oBACA,SACA,IAGA,CACA,SACA,OACA,oBACA,KAxBYsC,EA4BlB2D,oBAAsB,kBACpB3D,EAAKpE,MAAMgI,aACL5D,EAAKpE,MAAMiI,gBAAe,GAC1B7D,EAAKpE,MAAMiI,gBAAe,IA/BhB7D,EAkClB8D,qBAAuB,kBACrB9F,EAAA/B,EAAAC,cAAA6H,EAAA,GAAKC,OAAW,IACdhG,EAAA/B,EAAAC,cAAA+H,EAAA,GAAKC,KAAS,GACZlG,EAAA/B,EAAAC,cAACiI,EAAD,CACEjH,MAAQ,YACRsE,KAAO,cACP6B,MAAQ,gBACRhC,QAAYrB,EAAK2D,oBACjBrG,KAAO,aAGXU,EAAA/B,EAAAC,cAAA+H,EAAA,GAAKC,KAAS,GACZlG,EAAA/B,EAAAC,cAACiI,EAAD,CACEjH,MAAQ,UACRsE,KAAO,WACP6B,MAAQ,UACRC,UAAY,QACZjC,QAAY,KACZ/D,KAAO,eApDG0C,EA0DlBoE,aAAe,WAAM,IAEX5B,EAAYxC,EAAKpE,MAAjB4G,QAER,OACExE,EAAA/B,EAAAC,cAACyF,EAAA,EAAD,CAAMxD,MAAS,CAAEC,MAAQ,SAAUiG,OAAS,SAC1CrG,EAAA/B,EAAAC,cAACyF,EAAA,EAAD,iCAGA3D,EAAA/B,EAAAC,cAACyF,EAAA,EAAD,KACI3D,EAAA/B,EAAAC,cAACoI,EAAD,CAAiB9F,aAAiBwB,EAAKpE,MAAM2I,qBAC/CvG,EAAA/B,EAAAC,cAACsI,EAAD,CACEpC,eAAmBpC,EAAK0D,YACxBlB,QAAYA,EACZlF,KAAO,QACPgD,aAAiBN,EAAKpE,MAAM0E,eAE5BN,EAAK8D,0BAvEb9D,EAAK8D,qBAAuB9D,EAAK8D,qBAAqBtD,KAA1B1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KAC5BA,EAAKoE,aAAepE,EAAKoE,aAAa5D,KAAlB1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KACpBA,EAAK2D,oBAAsB3D,EAAK2D,oBAAoBnD,KAAzB1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KAC3BA,EAAK0D,UAAY1D,EAAK0D,UAAUlD,KAAf1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KAPDA,wEAmFhB,IAAMyE,EAAO9I,KAAKC,MAAM8I,QACpB/I,KAAKyI,eACLzI,KAAKmI,uBAET,OACE9F,EAAA/B,EAAAC,cAAA8B,EAAA/B,EAAAE,SAAA,KAAIsI,UA1FkBrI,+CCItBuI,cAOF,SAAAA,EAAY/I,GAAM,IAAAoE,EAAA,OAAAlE,OAAAmE,EAAA,EAAAnE,CAAAH,KAAAgJ,IACd3E,EAAAlE,OAAAoE,EAAA,EAAApE,CAAAH,KAAAG,OAAAqE,EAAA,EAAArE,CAAA6I,GAAAvE,KAAAzE,KAAMC,KANVgJ,kBAAoB,WACZ5E,EAAKpE,MAAMiH,QACX7C,EAAKpE,MAAMiJ,wBAGD7E,EAQlBuE,mBAAqB,SAAA1F,GAAgB,IAC3B3B,EAD2B2B,EAAbiG,OACd5H,MAEN8C,EAAKpE,MAAMmJ,sBAAsB7H,IAXnB8C,EAclBgF,eAAiB,SAACnC,GAEd,IAAMoC,EAAQjF,EAAKpE,MAAMsJ,cAAcC,cACvC,OAAOtC,EAAO,GAAGuC,OAAOH,IAAU,GAjBpBjF,EAoBlBuC,WAAa,kBACT8C,IAAQrF,EAAKpE,MAAM4G,UAlBnBxC,EAAKuE,mBAAqBvE,EAAKuE,mBAAmB/D,KAAxB1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KAE1BA,EAAKuC,WAAavC,EAAKuC,WAAW/B,KAAhB1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KALJA,wEA0Bd,IAAI+C,EAASpH,KAAKC,MAAMsJ,cACpB1C,EAAuB,KAAXO,GAAiBpH,KAAK4G,cACnB,KAAXQ,GAAiBpH,KAAK4G,aAAaQ,OAAOpH,KAAKqJ,gBAEnDN,EAAU/I,KAAK4G,aAAa+C,OAAS,EAEzC,OACItH,EAAA/B,EAAAC,cAACqJ,EAAD,CACI7H,KAAS/B,KAAKC,MAAM8B,KACpB8E,QAAYA,EACZ+B,mBAAuB5I,KAAK4I,mBAC5BX,aAAiBjI,KAAKC,MAAMgI,aAC5BC,eAAmBlI,KAAKC,MAAMiI,eAC9Ba,QAAYA,EACZpE,aAAiB3E,KAAKC,MAAM0E,sBA/CXlE,aA4D3BoJ,EAAqB,CACvBT,0BACAlB,mBACA4B,eACAnF,iBACAuE,0BAGWtH,cAfS,SAAAC,GAAK,MAAK,CAC9BE,KAAOF,EAAMC,UAAUC,KACvB8E,QAAUhF,EAAMgF,QAChB0C,cAAgB1H,EAAM0H,cACtBtB,aAAepG,EAAMkI,sBAWeF,EAAzBjI,CAA6CoH,uDC7EtD/F,UAAO+G,EAAA,EAAK/G,MACZf,EAASC,EAAA,EAAOD,OAsCP+H,GAjCX5H,EAAA/B,EAAAC,cAAA2J,EAAA,GAASC,MAHL,iFAIA9H,EAAA/B,EAAAC,cAAA4B,EAAA,GAAQG,aAAe,KACnBD,EAAA/B,EAAAC,cAAC6J,EAAD,CAAQ7I,MAAQ,KAAhB,KACAc,EAAA/B,EAAAC,cAAC6J,EAAD,CAAQ7I,MAAQ,KAAhB,KACAc,EAAA/B,EAAAC,cAAC6J,EAAD,CAAQ7I,MAAQ,KAAhB,OA6BGyI,EAAA,EAAKK,QAAL,CAxBI,SAAAnH,GAAA,IAAGoH,EAAHpH,EAAGoH,eAAH,OACfjI,EAAA/B,EAAAC,cAAAyJ,EAAA,GAAMjG,UAAY,kBACdwG,SAAaD,GAGbjI,EAAA/B,EAAAC,cAACiK,EAAD,KACInI,EAAA/B,EAAAC,cAAA0B,EAAA,GACI6B,KAAO,sBACPnC,KAAO,OACP8I,UAAc,EACd3H,YAAc,YAItBT,EAAA/B,EAAAC,cAACiK,EAAD,KACInI,EAAA/B,EAAAC,cAAAiF,EAAA,GACIkF,SAAW,UADf,kBC9BSC,cAEnB,SAAAA,EAAY1K,GAAM,IAAAoE,EAAA,OAAAlE,OAAAmE,EAAA,EAAAnE,CAAAH,KAAA2K,IAChBtG,EAAAlE,OAAAoE,EAAA,EAAApE,CAAAH,KAAAG,OAAAqE,EAAA,EAAArE,CAAAwK,GAAAlG,KAAAzE,KAAMC,KAKR2K,SAAW,WACTvG,EAAKpE,MAAMiI,gBAAe,IAJ1B7D,EAAKuG,SAAWvG,EAAKuG,SAAS/F,KAAd1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KAHAA,wEAWhB,OACEhC,EAAA/B,EAAAC,cAAAsK,EAAA,GACEpI,MAAQ,QACRqI,UAAQ,EACR/B,QAAY/I,KAAKC,MAAMgI,aACvB8C,OAAW,KACXH,SAAa5K,KAAK4K,UAElBvI,EAAA/B,EAAAC,cAAA,qCACA8B,EAAA/B,EAAAC,cAAA6H,EAAA,GAAK4C,MAAQ,UACX3I,EAAA/B,EAAAC,cAAA+H,EAAA,GAAKC,KAAS,IACZlG,EAAA/B,EAAAC,cAAC0J,EAAD,CAAYK,eAAmBtK,KAAKC,MAAMgL,2BAxBHxK,aCM7CyK,6MACJD,eAAiB,SAACE,GAEhBA,EAAEC,iBAEF,IAAIlE,EAASmE,SAASC,kBAAkB,uBAAuB,GAAG/J,MAClEkC,QAAQC,IAAI,wBAA0BwD,GACtC7C,EAAKpE,MAAMsL,kBAAkBrE,4EAK7B,OACI7E,EAAA/B,EAAAC,cAACiL,EAAD,CACIvD,aAAiBjI,KAAKC,MAAMgI,aAC5BC,eAAmBlI,KAAKC,MAAMiI,eAC9B+C,eAAmBjL,KAAKiL,wBAhBPQ,IAAMhL,WA2B7BoJ,EAAqB,CACvB3B,mBACAqD,uBAGW3J,cAVS,SAAAC,GAAK,MAAK,CAC9BoG,aAAepG,EAAMkI,sBASeF,EAAzBjI,CAA6CsJ,2JC9B5DQ,KAAQC,IAAIC,MACZF,KAAQC,IAAIE,MAEZ,IAYMC,GAAcC,OAEdC,GACF3J,EAAA/B,EAAAC,cAAA,WACI8B,EAAA/B,EAAAC,cAAC0L,GAAA,EAAD,CACIpG,KAAS+F,KACTlE,MAAUoE,GACVnJ,KAAO,KACPH,MAdQ,CAChB0J,SAAW,WACXC,OAAS,OACTC,KAAO,UAaA/J,EAAA/B,EAAAC,cAAC0L,GAAA,EAAD,CACCpG,KAASgG,KACTnE,MAAQ,QACR/E,KAAO,KACPH,MA1BS,CACjB0J,SAAU,WACVE,KAAO,MACPD,OAAS,WA6BPE,GAAaC,gCAAqBN,IAKzBO,GAJMC,mBAAQ,CACzBC,KAAMJ,KCJKK,WArCI,SAAAxJ,GAAmB,IAAhByJ,EAAgBzJ,EAAhByJ,UAGdT,EAAW,KAIXA,EAFAvI,MAAMC,QAAQ+I,GAEHA,EADEA,EAAUhD,OAAS,GAGrBgD,EAEf,IAAMC,EAAaD,GAAa,CAACT,EAASW,IAAKX,EAASY,KAExD,OACIzK,EAAA/B,EAAAC,cAACwM,EAAA,EAAD,CACIhJ,UAAY,wBACZiJ,OAAWJ,GAAc,CAAC,SAAU,MACpCK,KAAS,IAET5K,EAAA/B,EAAAC,cAAC2M,EAAA,EAAD,CACIC,IAAI,uDAGR9K,EAAA/B,EAAAC,cAAC6M,EAAA,EAAD,CACIvH,KAASmG,GACTE,SAAaU,GACZvK,EAAA/B,EAAAC,cAAC8M,GAAA,EAAD,4BAA2BhL,EAAA/B,EAAAC,cAAA,WAA3B,yBAGL8B,EAAA/B,EAAAC,cAAC+M,GAAA,EAAD,CACIX,UAAaA,EACbjF,MAAQ,eCvBT6F,GAZW,WACxB,OACElL,EAAA/B,EAAAC,cAAA,WACE8B,EAAA/B,EAAAC,cAAA6H,EAAA,GAAKC,OAAW,IACdhG,EAAA/B,EAAAC,cAAA+H,EAAA,GAAKC,KAAS,GAAKiF,OAAW,GAC5BnL,EAAA/B,EAAAC,cAACkN,GAAD,UC2CKC,GAhDM,SAAAxK,GAA+D,IAA5D2D,EAA4D3D,EAA5D2D,QAASP,EAAmDpD,EAAnDoD,SAAUqH,EAAyCzK,EAAzCyK,qBAAsBhJ,EAAmBzB,EAAnByB,aAE/D,OACEtC,EAAA/B,EAAAC,cAAA,OAAKwD,UAAY,mCACf1B,EAAA/B,EAAAC,cAACsI,EAAD,CACElH,KAAO,SACPkF,QAAYA,EACZlC,aAAiBA,EACjB2B,SAAaA,EACbc,OAAS,MAEX/E,EAAA/B,EAAAC,cAAA6H,EAAA,GAAKC,OAAW,IACdhG,EAAA/B,EAAAC,cAAA+H,EAAA,GAAKC,KAAS,GACZlG,EAAA/B,EAAAC,cAAA,SAAOqN,QAAU,MAAjB,WAEFvL,EAAA/B,EAAAC,cAAA+H,EAAA,GAAKkF,OAAW,GACdnL,EAAA/B,EAAAC,cAAA0B,EAAA,GACIM,GAAK,KACLuB,KAAO,KACPC,UAAY,wBACZnB,SAAa+K,EACbhM,KAAO,eAIfU,EAAA/B,EAAAC,cAAA6H,EAAA,GAAMC,OAAW,IACfhG,EAAA/B,EAAAC,cAAA+H,EAAA,GAAMC,KAAS,GACblG,EAAA/B,EAAAC,cAAA,SAAOqN,QAAU,MAAjB,UAEFvL,EAAA/B,EAAAC,cAAA+H,EAAA,GAAKkF,OAAW,GACdnL,EAAA/B,EAAAC,cAAA0B,EAAA,GACIM,GAAK,KACLuB,KAAO,KACPC,UAAY,wBAEZnB,SAAa+K,EACbhM,KAAO,eAKbU,EAAA/B,EAAAC,cAAAiF,EAAA,0BCxCFvB,GAAM,CACV4J,GAAK,GACLC,GAAK,GACLC,GAAK,GACLC,GAAK,IAGDC,GAAQ,CACZJ,GAAK,GACLC,GAAK,GACLC,GAAK,GACLC,GAAK,GA0BQE,GAtBS,SAAAhL,GAA0E,IAAvE2D,EAAuE3D,EAAvE2D,QAAS8F,EAA8DzJ,EAA9DyJ,UAAWrG,EAAmDpD,EAAnDoD,SAAUqH,EAAyCzK,EAAzCyK,qBAAsBhJ,EAAmBzB,EAAnByB,aAE7E,OACEtC,EAAA/B,EAAAC,cAAA,WACE8B,EAAA/B,EAAAC,cAAA6H,EAAA,GAAKC,OAAW,GAAK8F,QAAU,gBAAgBnD,MAAQ,UACrD3I,EAAA/B,EAAAC,cAAA+H,EAAA,EAAU2F,GACR5L,EAAA/B,EAAAC,cAAC6N,GAAD,CACET,qBAAyBA,EACzBrH,SAAaA,EACb3B,aAAiBA,EACjBkC,QAAYA,KAGhBxE,EAAA/B,EAAAC,cAAA+H,EAAA,EAAUrE,GACL0I,GAAatK,EAAA/B,EAAAC,cAACkN,GAAD,CAAKd,UAAcA,QCxBvC0B,eAEJ,SAAAA,EAAYpO,GAAM,IAAAoE,EAAA,OAAAlE,OAAAmE,EAAA,EAAAnE,CAAAH,KAAAqO,IAChBhK,EAAAlE,OAAAoE,EAAA,EAAApE,CAAAH,KAAAG,OAAAqE,EAAA,EAAArE,CAAAkO,GAAA5J,KAAAzE,KAAMC,KAeRqO,mBAAqB,SAACC,EAAWC,GAChC/K,QAAQC,IAAI6K,GACZ9K,QAAQC,IAAI8K,IAlBKnK,EAqBlB4E,kBAAoB,WAClB5E,EAAKpE,MAAMwO,gBAAgBpK,EAAKpE,MAAMqG,WAtBtBjC,EAyBlBqK,kBAAoB,WAElB,IAAMpF,EAAQ,IAAIqF,OAAO,sFAEzB,SAAGrF,EAAMsF,KAAKvK,EAAKwK,iBAAkBvF,EAAMsF,KAAKvK,EAAKyK,mBAEnDzK,EAAK0K,mBAEE,IAjCO1K,EAuClB2K,WAAa,SAAAC,GAAI,OACf,IAAIC,KAAKD,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAxClC5K,EA2ClB8K,gBAAkB,SAACF,EAAM3F,GAAP,OAChB2F,EAAKG,MAAM9F,IA5CKjF,EA+ClB0K,gBAAkB,WAEhB,IAAMzF,EAAQ,IAAIqF,OAAO,SAEvBtK,EAAKsI,UAAYtI,EAAKpE,MAAM0M,UAAUvF,OAAO,SAAA8E,GAE7C,IAAI5L,EAAI+D,EAAK8K,gBAAgBjD,EAASmD,SAAU/F,GAE5CgG,EAAejL,EAAK2K,WAAW1O,GAEnCA,EAAI+D,EAAK8K,gBAAgB9K,EAAKwK,cAAevF,GAE7C,IAAIiG,EAAQlL,EAAK2K,WAAW1O,GAE5BA,EAAI+D,EAAK8K,gBAAgB9K,EAAKyK,eAAgBxF,GAE9C,IAAIkG,EAAQnL,EAAK2K,WAAW1O,GAE5B,OAAQiP,GAASD,GAAgBE,GAASF,IAG5CjL,EAAKoL,eApEWpL,EAuElBqL,WAAa,kBACXrL,EAAKwK,eAAiBxK,EAAKyK,gBAxEXzK,EA2ElBsJ,qBAAuB,SAACgC,GAEF,OAApBA,EAAIxG,OAAOrF,KACPO,EAAKwK,cAAgBc,EAAIxG,OAAO5H,MAChC8C,EAAKyK,eAAiBa,EAAIxG,OAAO5H,MAErC,IAAIqO,EAAmBvL,EAAKqL,aACxBG,EAAoBxL,EAAKqK,oBAK7B,GAHGkB,IACDvL,EAAKsI,UAAY,MAEhBiD,GAAoBC,EAAkB,CAG9BxL,EAAKwK,cACJxK,EAAKyK,eACJzK,EAAKpE,MAAMqG,SAItBjC,EAAKpE,MAAM6P,sBACXzL,EAAK0K,oBAjGS1K,EAsGlB0L,gBAAkB,kBAChBrG,IAAQrF,EAAKpE,MAAM4G,UAvGHxC,EA0GlBM,aAAe,SAAApD,GACb8C,EAAKpE,MAAM0E,aAAapD,GACxB8C,EAAKsI,UAAY,KACjBtI,EAAKoL,eA7GWpL,EAgHlB2L,UAAY,SAACL,KA7GXtL,EAAKwK,cAAgB,KACrBxK,EAAKyK,eAAiB,KACtBzK,EAAK0L,gBAAkB1L,EAAK0L,gBAAgBlL,KAArB1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KAEvBA,EAAKsJ,qBAAqB9I,KAA1B1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KACAA,EAAKqK,kBAAoBrK,EAAKqK,kBAAkB7J,KAAvB1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KACzBA,EAAKM,aAAeN,EAAKM,aAAaE,KAAlB1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KAEpBA,EAAKqL,WAAarL,EAAKqL,WAAW7K,KAAhB1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAkE,KAElBA,EAAKsI,UAAY,KAbDtI,wEAsHhB,IAAIsI,EAAY3M,KAAK2M,WAAa3M,KAAKC,MAAM0M,UAAU3M,KAAKC,MAAM0M,UAAUhD,OAAS,GAErF,OACEtH,EAAA/B,EAAAC,cAAC0P,GAAD,CACEpJ,QAAY7G,KAAK+P,kBACjBpD,UAAcA,EACdhI,aAAiB3E,KAAK2E,aACtB2B,SAAatG,KAAKC,MAAMqG,SACxBqH,qBAAyB3N,KAAK2N,8BAhIJlN,aA4I5BoJ,GAAqB,CACzBlF,iBACA8J,oBACAqB,yBAGalO,eAZS,SAACC,GAAD,MAAY,CAClCgF,QAAUhF,EAAMgF,QAChBP,SAAWzE,EAAMqO,gBACjBvD,UAAY9K,EAAM8K,UAAU9K,EAAMqO,mBASIrG,GAAzBjI,CAA6CyM,IClJ7C8B,GARc,kBAEzB9N,EAAA/B,EAAAC,cAAA,aCIE6P,WAAWC,EAAA,EAAKD,SAMhBC,GAAO,CACT,CACIlG,MAAQ,gBACRxI,KAAO,IACPkE,KAAO,MACPyK,OAAS/C,IAEb,CACIpD,MAAQ,cACRxI,KAAO,IACPkE,KAAO,OACPyK,OAASjC,IAEb,CACIlE,MAAQ,kBACRxI,KAAO,IACPkE,KAAO,SACPyK,OAASH,KA0BFI,GAtBU,SAAArN,GAAgCA,EAA9BsN,YAA8B,IAAjBC,EAAiBvN,EAAjBuN,YAE9BC,EAAkBD,GAAsC,WAAvBA,EAAYlL,QAAuBkL,EAAY9O,KAEtF,OADA8B,QAAQC,IAAIgN,GAERrO,EAAA/B,EAAAC,cAAA8P,EAAA,GACItM,UAAY,oBACZ4M,iBAAqBD,EACrBE,UAAcF,GAEZL,GAAKpM,IAAI,SAAA4M,GAAA,IAnCFC,EAAkBC,EAmCdpP,EAAFkP,EAAElP,KAAMkE,EAARgL,EAAQhL,KAAMyK,EAAdO,EAAcP,OAAQnG,EAAtB0G,EAAsB1G,MAAtB,OACP9H,EAAA/B,EAAAC,cAAC6P,GAAD,CACI9O,IAAQK,EACRqP,IAAO3O,EAAA/B,EAAAC,cAAA,YAAM8B,EAAA/B,EAAAC,cAAA0Q,EAAA,GAAMtP,KAAQkE,IAApB,IAA+BsE,EAA/B,KACP1E,UAvCCqL,EAuCwBJ,EAvCNK,EAuCsBpP,EAtCzDmP,IAAqBC,IAuCL1O,EAAA/B,EAAAC,cAAC+P,EAAD,WC9CdY,oLACK,IAAAnR,EAE8BC,KAAKC,MAAlCuQ,EAFDzQ,EAECyQ,YAAaC,EAFd1Q,EAEc0Q,YAErB,OACEpO,EAAA/B,EAAAC,cAAC4Q,GAAD,CACEX,YAAgBA,EAChBC,YAAgBA,WARWhQ,aAqBpBmB,eAPS,SAAAC,GAAK,MAAK,CAChC2O,YAAc3O,EAAMqO,gBACpBO,YAAc5O,EAAMgF,QAAQhF,EAAMqO,mBAGT,KAEZtO,CAA6CsP,cClBtDE,8MAEJC,QAAU,kBAAMhP,EAAA/B,EAAAC,cAAA,OAAKwD,UAAU,oCAAf,uFAId,OACE1B,EAAA/B,EAAAC,cAAA,OAAKwD,UAAU,mBACb1B,EAAA/B,EAAAC,cAAA6H,EAAA,OACE/F,EAAA/B,EAAAC,cAAA+H,EAAA,GAAKuF,GAAG,KAAKE,GAAG,KACd1L,EAAA/B,EAAAC,cAAC+Q,EAAD,QAIJjP,EAAA/B,EAAAC,cAAA6H,EAAA,OACE/F,EAAA/B,EAAAC,cAAA+H,EAAA,GAAKuF,GAAG,KAAK0D,GAAG,KACdlP,EAAA/B,EAAAC,cAACiR,EAAD,QAIJnP,EAAA/B,EAAAC,cAAA6H,EAAA,GAAK+F,QAAU,SAAS5F,KAAQ,IAC9BlG,EAAA/B,EAAAC,cAAA+H,EAAA,OACEjG,EAAA/B,EAAAC,cAACkR,GAAD,QAIJpP,EAAA/B,EAAAC,cAAA6H,EAAA,GAAK+F,QAAU,SAAS5F,KAAQ,IAC9BlG,EAAA/B,EAAAC,cAAA+H,EAAA,OACEjG,EAAA/B,EAAAC,cAACT,GAAA,QAAD,gBA5BYW,aAoCT2Q","file":"static/js/4.5b0f833a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nclass DefaultFooter extends Component {\r\n  render() {\r\n\r\n    // eslint-disable-next-line\r\n    const { children, ...attributes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n       <p>footer</p>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDefaultFooter.propTypes = propTypes;\r\nDefaultFooter.defaultProps = defaultProps;\r\n\r\nexport default DefaultFooter;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Icon } from 'antd'\r\n\r\nconst authorizationHook = WrapComponent => {\r\n    class authorizationComponent extends Component{\r\n        render(){\r\n\r\n            const authorized = this.props.isSuperuser\r\n            \r\n            return(\r\n                (authorized && <WrapComponent {...this.props} />) || <Icon type = 'loading' />\r\n            )\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = state => ({\r\n        isSuperuser : state.data_user.role\r\n    })\r\n\r\n    return connect(mapStateToProps, null)(authorizationComponent)\r\n}\r\n\r\nexport default authorizationHook\r\n","import React from 'react'\r\nimport './../index.sass'\r\nimport { Input, Select } from 'antd'\r\n\r\nconst Search = Input.Search\r\nconst Option = Select.Option\r\n\r\n\r\nconst TypesDevice = (\r\n    <Select \r\n        defaultValue = 'G'>\r\n        <Option value = 'G'>\r\n            G\r\n        </Option>\r\n        <Option value = 'P'>\r\n            P\r\n        </Option>\r\n        <Option value = 'M'>\r\n            M\r\n        </Option>\r\n    </Select>\r\n)\r\n\r\nconst SearchField = props => (    \r\n        <Search \r\n            id = 'SearchFieldDevice'\r\n            style = {{width: 500, marginBottom: 20}}\r\n            size = 'large'\r\n            onChange = { props.handleFilter }\r\n            placeholder = 'Introduce el serial de dipositivo'\r\n        />\r\n)\r\n\r\nexport default SearchField","import React from 'react'\r\nimport { Select } from 'antd';\r\n\r\nconst Option = Select.Option\r\n\r\nconst envolveTd = data => (\r\n    <td>\r\n        {data}\r\n    </td>\r\n)\r\n\r\nconst createOption = (data, styles) => (\r\n    <Option\r\n        value = { data }\r\n        style = { styles }    \r\n    >\r\n        {data}\r\n    </Option>\r\n)\r\n\r\nconst envolveSelect = (data, forDefault) => (\r\n    <Select\r\n        style = {{ width : 120 }}\r\n        defaultValue = { forDefault }\r\n        name=\"status\"       \r\n        className=\"status\"\r\n    >\r\n\r\n    { data }\r\n\r\n    </Select>\r\n)\r\n\r\nexport const Item = ({type, values, forDefault = null, optionStyle = null}) => {\r\n    var toRender = null\r\n    \r\n    console.log(values)\r\n    if(type === 'simple' && typeof values === 'string')\r\n        toRender = envolveTd(values)\r\n        \r\n\r\n    if(type === 'select' && Array.isArray(values) && forDefault){\r\n        \r\n        let valueToSelect = values.map(value => {\r\n            let option = createOption(value, optionStyle)\r\n\r\n            return option\r\n        })\r\n\r\n        let toSelect = envolveSelect(valueToSelect, forDefault)\r\n\r\n        toRender = envolveTd(toSelect)\r\n    }\r\n\r\n    return toRender\r\n}","import React, { Component } from 'react'\r\nimport { Button, Select } from 'antd'\r\nimport authorizationHook from '../../../../hooks/authorizationHook'\r\nimport { Item } from './Item'\r\n\r\nconst Option = Select.Option\r\n\r\nconst optionStyle = {\r\n  width : '100px'\r\n}\r\n\r\nclass DeviceItemTable extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.getItemChildrenLayoutRenderDevice = this.getItemChildrenLayoutRenderDevice.bind(this)\r\n\r\n    this.getDataOptionDevice = this.getDataOptionDevice.bind(this)\r\n    this.getDataColumnsDevice = this.getDataColumnsDevice.bind(this)\r\n\r\n    this.handleClick = this.handleClick.bind(this)\r\n  }\r\n\r\n  getDataOptionDevice(){\r\n    \r\n    const { name } = this.props \r\n\r\n    return (\r\n      <Option \r\n        key = { name }\r\n        value = { name }\r\n        >\r\n        { name }\r\n      </Option>\r\n    )\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { name, selectDevice } = this.props\r\n    \r\n    selectDevice(name)\r\n  }\r\n\r\n  getDataColumnsDevice(){\r\n\r\n    const { data, name } = this.props \r\n\r\n    const selectOperation = (status) => (\r\n      <td>\r\n          <Select\r\n            style = {{ width : 120 }}\r\n            defaultValue = {data.status === 'H'?\"ACTIVE\":\"INACTIVE\"}\r\n            name=\"status\"       \r\n            id=\"status\">\r\n\r\n              <Option\r\n                style = { optionStyle }\r\n                value=\"ACTIVE\">ACTIVO\r\n              </Option>\r\n\r\n              <Option\r\n                style = { optionStyle }\r\n                value=\"INACTIVE\">INACTIVO\r\n              </Option>\r\n          </Select>\r\n        </td>\r\n    )\r\n\r\n    const SelectOp = authorizationHook(Item)\r\n\r\n    return(\r\n\r\n      <>\r\n        <Item\r\n          type = 'simple' \r\n          values = { name }  \r\n        />\r\n        <Item\r\n          type = 'simple' \r\n          values = { data.typee }  \r\n        />\r\n        <Item\r\n          type = 'simple' \r\n          values = { data.date_register }  \r\n        />\r\n\r\n        <SelectOp \r\n          type = 'select'\r\n          forDefault = {data.status}\r\n          optionStyle = {{ width : '100px' }}\r\n          values = { ['ACTIVO', 'INACTIVO'] }\r\n        />\r\n        \r\n\r\n        <td>\r\n          <Button \r\n            disabled = { data.status === 'ACTIVO' ? false : true}\r\n            onClick = { this.handleClick }\r\n            style = {{ background : 'none', border: 'none'}}\r\n            icon = 'eye' />\r\n        </td>\r\n      </>\r\n    )\r\n  }\r\n\r\n  getItemChildrenLayoutRenderDevice(){\r\n   \r\n    return this.props.type === 'row-table'\r\n      ? this.getDataColumnsDevice()\r\n      : this.getDataOptionDevice()\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.type)\r\n    const data_render = this.getItemChildrenLayoutRenderDevice() \r\n \r\n    return (\r\n      <>{ data_render }</>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DeviceItemTable\r\n","import React from 'react'\r\nimport { Table } from 'reactstrap'\r\nimport { Header as _Header } from './Header'\r\nimport { Body as _Body } from './Body'\r\n\r\nconst TableLayout = ({ children }) => (\r\n    <Table responsive striped>\r\n        { children }\r\n    </Table>\r\n)\r\n\r\nTableLayout.Header = _Header\r\nTableLayout.Body = _Body\r\n\r\nexport default TableLayout ","import React from 'react'\r\n\r\nconst Header = ({ children }) => (\r\n    <thead>\r\n        <tr> \r\n            { children }\r\n        </tr>\r\n  </thead>\r\n)\r\n\r\nexport { Header }","import React from 'react'\r\n\r\nconst Body = ({ children }) => (\r\n    <tbody>\r\n        { children }        \r\n    </tbody>\r\n)\r\n\r\nexport { Body }","import React from 'react'\r\nimport { Select } from 'antd'\r\n\r\n\r\nconst DropdownLayout = (props) => {\r\n\r\n    return(\r\n        <Select\r\n            onChange = { props.selectDevice }\r\n            name = 'select-device'\r\n            id = 'select-device'\r\n            defaultValue = { props.selected }>\r\n            { props.children }\r\n        </Select>\r\n    )\r\n}\r\n\r\nexport default DropdownLayout","import React, { PureComponent } from 'react'\r\nimport DeviceItemTable from './DeviceItemTable'\r\nimport TableLayout from './layouts/TableLayout'\r\nimport { Select } from 'antd'\r\nimport DropdownLayout from './layouts/DropdownLayout'\r\n\r\nclass DeviceList extends PureComponent {\r\n\r\n  constructor(props){\r\n\r\n    super(props)\r\n\r\n    this.getColumnsDevices = this.getColumnsDevices.bind(this)\r\n    this.columnOperation = this.columnOperation.bind(this)\r\n\r\n    this.getDevices = this.getDevices.bind(this)\r\n    this.deviceOperation = this.deviceOperation.bind(this)\r\n\r\n    this.getTable = this.getTable.bind(this)\r\n    this.getSelect = this.getSelect.bind(this)\r\n\r\n    this.getItem = this.getItem.bind(this)\r\n  }\r\n\r\n  getColumnsDevices = () => (\r\n    this.props.columns_header && this.props.columns_header.map(this.columnOperation)\r\n  )\r\n\r\n  columnOperation = column => (<th key = {column}>{ column }</th>)\r\n\r\n  getDevices = () => (\r\n    this.props.devices && this.props.devices.map(this.deviceOperation)\r\n  )\r\n\r\n  getSimpleList = (devices_name) => (\r\n    <Select.Option value = { devices_name }>{ devices_name }</Select.Option>\r\n  )\r\n\r\n  getItem = device => {\r\n    return(\r\n      this.props.type === 'table' ?<DeviceItemTable\r\n          selectDevice = { this.props.selectDevice } \r\n          key = { device[0] } \r\n          name = { device[0] }\r\n          data = { device[1] }\r\n          type = { 'row-' + this.props.type }  \r\n        />: this.getSimpleList(device[0])\r\n    )\r\n  }\r\n\r\n  deviceOperation = device => {\r\n    let Item = null\r\n   \r\n    if(!this.props.filter || (device[0][0] === this.props.filter))\r\n      Item = this.getItem(device)\r\n\r\n    return this.props.type  === 'table'\r\n      ? <tr>{ Item }</tr>\r\n      : Item\r\n  }\r\n\r\n  getTable = TableLayout => (\r\n    <TableLayout>\r\n      <TableLayout.Header>\r\n        { this.getColumnsDevices() }\r\n      </TableLayout.Header>\r\n      <TableLayout.Body>\r\n        { this.getDevices() }\r\n      </TableLayout.Body>\r\n    </TableLayout>\r\n  )\r\n\r\n  getSelect = DropdownLayout => (\r\n    <DropdownLayout\r\n      selectDevice = { this.props.selectDevice }\r\n      selected = { this.props.selected }\r\n      >\r\n      { this.getDevices() }\r\n    </DropdownLayout>\r\n  )\r\n\r\n  render() {\r\n    \r\n    let Data = null\r\n  \r\n    if(this.props.type === 'table')\r\n\r\n      Data = this.getTable(TableLayout)\r\n\r\n    else if(this.props.type === 'select')\r\n  \r\n      Data = this.getSelect(DropdownLayout)\r\n         \r\n    return (  \r\n      <>{ Data }</>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DeviceList\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\n\r\nconst ButtonsOperation = ({ icon, color, value, onClick, type, fontColor }) => (\r\n    <Button\r\n        style = {{ backgroundColor : color, color : fontColor, borderColor: color }}\r\n        size = 'large'\r\n        type = { type }\r\n        icon = { icon }\r\n        onClick = { onClick }\r\n        >\r\n    \r\n        { value }\r\n    </Button>\r\n)\r\n\r\nexport default ButtonsOperation\r\n","import React, { Component } from 'react'\r\n\r\nimport SearchComponent from './FieldSearch'\r\nimport DeviceList from './DeviceList'\r\nimport { Card, CardHeader, CardBody } from 'reactstrap'\r\nimport ButtonOperation from './ButtonsOperation'\r\nimport { Row, Col } from 'antd'\r\n\r\n\r\nclass DeviceSection extends Component {\r\n\r\n  constructor(props){\r\n\r\n    super(props)\r\n\r\n    this.getButtonsOperations = this.getButtonsOperations.bind(this)\r\n    this.getCardTable = this.getCardTable.bind(this)\r\n    this.handleClickRegister = this.handleClickRegister.bind(this)\r\n    this.getColums = this.getColums.bind(this)\r\n  }\r\n\r\n  getColums = () => (\r\n    this.props.role\r\n      ? [\r\n        'Codigo',\r\n        'Tipo',\r\n        'Fecha de registro',\r\n        'Estado',\r\n        ''\r\n      ]\r\n\r\n      : [\r\n        'Codigo',\r\n        'Tipo',\r\n        'Fecha de registro',\r\n        ''\r\n      ]\r\n  )\r\n\r\n  handleClickRegister = () => (\r\n    this.props.visible_form \r\n        ? this.props.setVisibleForm(false)\r\n        : this.props.setVisibleForm(true)\r\n  )\r\n\r\n  getButtonsOperations = () => (\r\n    <Row gutter = { 10 }>\r\n      <Col span = { 4 }>\r\n        <ButtonOperation \r\n          value = 'Registrar'\r\n          icon = \"plus-circle\"\r\n          color = \"ghost-primary\"\r\n          onClick = { this.handleClickRegister }\r\n          type = 'primary'\r\n        />\r\n      </Col>\r\n      <Col span = { 4 }>\r\n        <ButtonOperation \r\n          value = 'Comprar'\r\n          icon = \"shopping\"\r\n          color = \"#fadb14\"\r\n          fontColor = 'black'\r\n          onClick = { null }\r\n          type = 'primary'\r\n        />\r\n      </Col>\r\n    </Row>\r\n  )\r\n  \r\n  getCardTable = () => {\r\n\r\n    const { devices } = this.props\r\n\r\n    return(\r\n      <Card style = {{ width : '1000px', margin : 'auto' }}>\r\n        <CardHeader>\r\n          Dispositivos Registrados\r\n        </CardHeader>\r\n        <CardBody>   \r\n            <SearchComponent handleFilter = { this.props.handleChangeSearch } />        \r\n          <DeviceList\r\n            columns_header = { this.getColums() }\r\n            devices = { devices }\r\n            type = 'table'\r\n            selectDevice = { this.props.selectDevice }\r\n          />\r\n          { this.getButtonsOperations() }\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  render(){\r\n\r\n    const card = this.props.visible\r\n      ? this.getCardTable()\r\n      : this.getButtonsOperations()\r\n\r\n    return(\r\n      <>{ card }</>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DeviceSection","import React, { Component } from 'react'\r\nimport DeviceSection from './../../components/DeviceSection'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    setFilterSearchDevice,\r\n    setVisibleForm,\r\n    setDevices,\r\n    selectDevice,\r\n    getDevicesFromServer\r\n} from './../../actions/DeviceActions'\r\n\r\nimport toPairs from 'lodash.topairs'\r\n\r\nclass SectionDevicesView extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.device)\r\n            this.props.getDevicesFromServer()\r\n    } \r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.handleChangeSearch = this.handleChangeSearch.bind(this)\r\n\r\n        this.getDevices = this.getDevices.bind(this)\r\n    }\r\n\r\n    handleChangeSearch = ({ target }) => {\r\n        let { value } = target\r\n    \r\n        this.props.setFilterSearchDevice(value)\r\n    }\r\n\r\n    isDeviceInList = (device) => {\r\n\r\n        const regex = this.props.filter_search.toUpperCase()\r\n        return device[0].search(regex) > -1\r\n    }\r\n\r\n    getDevices = () => (\r\n        toPairs(this.props.devices)\r\n    )\r\n\r\n    render() {\r\n        \r\n        let filter = this.props.filter_search\r\n        let devices = ( filter === '' && this.getDevices())\r\n            || (filter !== '' && this.getDevices().filter(this.isDeviceInList))\r\n\r\n        let visible = this.getDevices().length > 0 ? true : false\r\n\r\n        return (\r\n            <DeviceSection\r\n                role = { this.props.role }\r\n                devices = { devices }\r\n                handleChangeSearch = { this.handleChangeSearch }   \r\n                visible_form = { this.props.visible_form }\r\n                setVisibleForm = { this.props.setVisibleForm }\r\n                visible = { visible }\r\n                selectDevice = { this.props.selectDevice }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    role : state.data_user.role,\r\n    devices : state.devices,\r\n    filter_search : state.filter_search,\r\n    visible_form : state.visible_form_device,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setFilterSearchDevice,\r\n    setVisibleForm,\r\n    setDevices,\r\n    selectDevice,\r\n    getDevicesFromServer\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SectionDevicesView)\r\n","import React from 'react'\r\nimport { Form, Input, Select, Button, Tooltip } from 'antd'\r\nimport './styles.sass'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\nconst description_type = \r\n        \"Tipo de dispositivo\\n\\G : valor en modulo\\n\\P = valor en mapa\\n\\S = seguimientos\"\r\n\r\nconst type_in_serial = (\r\n    <Tooltip title = { description_type }>\r\n        <Select defaultValue = 'G'>\r\n            <Option value = 'G'>G</Option>\r\n            <Option value = 'P'>P</Option>\r\n            <Option value = 'S'>S</Option>\r\n        </Select>\r\n    </Tooltip>\r\n)\r\n\r\nconst FormDevice = ({ onHandleSubmit }) => (\r\n    <Form className = 'register-device'\r\n        onSubmit = { onHandleSubmit }\r\n        \r\n    >\r\n        <Item>\r\n            <Input\r\n                name = 'input-create-device'\r\n                type = 'text'\r\n                maxLength = { 4 }\r\n                placeholder = 'Serial'\r\n            />\r\n        </Item>\r\n\r\n        <Item>\r\n            <Button\r\n                htmlType = 'submit' >\r\n                Registrar\r\n            </Button>\r\n        </Item>\r\n    </Form>\r\n  \r\n)\r\n\r\nexport default Form.create()(FormDevice)\r\n","import React, { Component } from 'react'\r\nimport { Modal, Row, Col } from 'antd'\r\nimport FormDevice from './FormDevice'\r\n\r\nexport default class SectionDeviceRegister extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.onCancel = this.onCancel.bind(this) \r\n  }\r\n\r\n  onCancel = () => {\r\n    this.props.setVisibleForm(false)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        width = '500px'\r\n        centered\r\n        visible = { this.props.visible_form }\r\n        footer = { null }\r\n        onCancel = { this.onCancel }\r\n        > \r\n        <h3>Registra un dispositivo</h3>\r\n        <Row align = 'center'>\r\n          <Col span = { 20 }>\r\n            <FormDevice onHandleSubmit = { this.props.onSubmitDevice }/>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport SectionDeviceRegister from './../../components/SectionDeviceRegister'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n    setVisibleForm,\r\n    fetchCreateDevice\r\n} from './../../actions/DeviceActions'\r\n\r\nclass FormDeviceView extends React.Component{\r\n  onSubmitDevice = (e) => {\r\n    \r\n    e.preventDefault()\r\n    \r\n    let device = document.getElementsByName('input-create-device')[0].value\r\n    console.log(\"contenido de input : \" + device)\r\n    this.props.fetchCreateDevice(device)\r\n\r\n  }\r\n\r\n  render(){\r\n    return(\r\n        <SectionDeviceRegister\r\n            visible_form = { this.props.visible_form }\r\n            setVisibleForm = { this.props.setVisibleForm }\r\n            onSubmitDevice = { this.onSubmitDevice }\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    visible_form : state.visible_form_device,\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setVisibleForm,\r\n    fetchCreateDevice\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDeviceView)\r\n","import React from 'react'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { renderToStaticMarkup } from 'react-dom/server'\r\nimport { divIcon } from 'leaflet'\r\nimport { \r\n    faMapMarker,\r\n    faTabletAlt\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport RandomColor from 'randomcolor'\r\n\r\nlibrary.add(faMapMarker)\r\nlibrary.add(faTabletAlt)\r\n\r\nconst stylesCenter = { \r\n    position: 'absolute',\r\n    left : '1px',\r\n    bottom : '250%'\r\n}\r\n\r\nconst styleMarker = {\r\n    position : 'absolute',\r\n    bottom : '100%',\r\n    left : '-7px'\r\n}\r\n\r\nconst colorMarker = RandomColor()\r\n\r\nconst IconMarker = (\r\n    <div>\r\n        <FontAwesomeIcon\r\n            icon = { faMapMarker }\r\n            color = { colorMarker }\r\n            size = '3x'\r\n            style = { styleMarker }\r\n        />\r\n           <FontAwesomeIcon\r\n            icon = { faTabletAlt }\r\n            color = 'white'\r\n            size = '1x'\r\n            style = { stylesCenter }\r\n        />\r\n     \r\n    </div>\r\n)\r\n\r\nconst iconMarkup = renderToStaticMarkup(IconMarker)\r\nconst optionRender = divIcon({\r\n    html: iconMarkup,\r\n})\r\n\r\nexport default optionRender","import React from 'react'\r\nimport { Map, TileLayer, Marker, Popup, Polyline } from 'react-leaflet'\r\nimport IconMarker from './IconMarker'\r\n\r\nimport 'leaflet/dist/leaflet.css'\r\n\r\n\r\n\r\nconst MapDevices = ({ positions }) => {\r\n    \r\n    let last_index = null\r\n    let position = null\r\n\r\n    if (Array.isArray(positions)){\r\n        last_index = positions.length - 1\r\n        position = positions[last_index]\r\n    }else\r\n        position = positions\r\n\r\n    const coordenate = positions && [position.lat, position.lon]\r\n    \r\n    return(\r\n        <Map\r\n            className = 'map element-operation'\r\n            center = { coordenate || [51.0009, -0.0009] }\r\n            zoom = { 13 }>\r\n\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n\r\n            <Marker \r\n                icon = { IconMarker }\r\n                position = { coordenate }>\r\n                 <Popup>A pretty CSS3 popup.<br />Easily customizable.</Popup>\r\n            </Marker>\r\n\r\n            <Polyline\r\n                positions = {positions}\r\n                color = '#F9B451'\r\n            />\r\n        </Map>\r\n    )\r\n}\r\n\r\nexport default MapDevices","import React from 'react'\r\nimport Map from './../../components/Map'\r\nimport { Row, Col } from 'antd'\r\n\r\nconst SectionValueToMap = () => {\r\n  return (\r\n    <div>\r\n      <Row gutter = { 24 }>\r\n        <Col span = { 20 } offset = { 4}>\r\n          <Map />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SectionValueToMap\r\n","import React from 'react'\r\nimport { Input, Button, Row, Col } from 'antd'\r\nimport DeviceList from './../../DeviceSection/DeviceList'\r\n\r\nconst panelOptions = ({ devices, selected, handleChangeDateTime, selectDevice }) => {\r\n  \r\n  return (\r\n    <div className = 'panel-options element-operation'>\r\n      <DeviceList \r\n        type = 'select'\r\n        devices = { devices }\r\n        selectDevice = { selectDevice }\r\n        selected = { selected }\r\n        filter = 'S'\r\n      />\r\n      <Row gutter = { 15 } >\r\n        <Col span = { 3 }>\r\n          <label htmlFor = 'fi'>Inicio</label>\r\n        </Col>\r\n        <Col offset = { 3 }>\r\n          <Input\r\n              id = 'fi'\r\n              name = 'fi'\r\n              className = 'input-panel-operation'\r\n              onChange = { handleChangeDateTime }\r\n              type = 'datetime'\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row  gutter = { 15 } >\r\n        <Col  span = { 3 } >\r\n          <label htmlFor = 'ff'>Final</label>\r\n        </Col>\r\n        <Col offset = { 3 }>\r\n          <Input\r\n              id = 'ff'\r\n              name = 'ff'\r\n              className = 'input-panel-operation'\r\n              \r\n              onChange = { handleChangeDateTime }\r\n              type = 'datetime'\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n        <Button>Agregar Rango</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default panelOptions\r\n","import React from 'react'\r\nimport Map from './../../../components/Map'\r\nimport PanelOptions from './panelOptions'\r\nimport { Row, Col } from 'antd'\r\n\r\nconst map = {\r\n  xs : 24,\r\n  md : 24,\r\n  lg : 12,\r\n  xl : 16\r\n}\r\n\r\nconst panel = {\r\n  xs : 24,\r\n  md : 24,\r\n  lg : 12,\r\n  xl : 8\r\n}\r\n\r\n\r\nconst SectionTracking = ({ devices, positions, selected, handleChangeDateTime, selectDevice }) => {\r\n\r\n  return (\r\n    <div>\r\n      <Row gutter = { 24 } justify = 'space-between' align = 'center' >\r\n        <Col { ...panel }>\r\n          <PanelOptions\r\n            handleChangeDateTime = { handleChangeDateTime }\r\n            selected = { selected }\r\n            selectDevice = { selectDevice }\r\n            devices = { devices }\r\n          /> \r\n        </Col>\r\n        <Col { ...map }>\r\n           { positions && <Map positions = { positions } />}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default SectionTracking\r\n","import React, { Component } from 'react'\r\nimport SectionTracking from './../../../../components/OperationSection/SectionTracking'\r\nimport { connect } from 'react-redux'\r\nimport toPairs from 'lodash.topairs'\r\nimport { \r\n  selectDevice,\r\n  getLastPosition,\r\n  getIntervalPosition\r\n} from './../../../../actions/DeviceActions'\r\n\r\nclass SectionTrackingView extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.firstDateTime = null\r\n    this.secondDateTime = null\r\n    this.getArrayDevices = this.getArrayDevices.bind(this)\r\n\r\n    this.handleChangeDateTime.bind(this)\r\n    this.validateRangeDate = this.validateRangeDate.bind(this)\r\n    this.selectDevice = this.selectDevice.bind(this)\r\n\r\n    this.validInput = this.validInput.bind(this)\r\n\r\n    this.positions = null\r\n  }\r\n\r\n  componentWillMount = (prevProps, nextProps) => {\r\n   console.log(prevProps)\r\n   console.log(nextProps)\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.getLastPosition(this.props.selected)\r\n  }\r\n\r\n  validateRangeDate = () => {\r\n\r\n    const regex = new RegExp(\"^([0-2][0-9]|3[0-1])/(0[1-9]|1[0-2])/(2[0-9]{3}) ([0-1][0-9]|2[0-3]):([0-5][0-9])$\")\r\n    \r\n    if(regex.test(this.firstDateTime) && regex.test(this.secondDateTime)){\r\n       \r\n      this.setDeviceRanges()\r\n\r\n      return true\r\n    }else\r\n      return false\r\n    \r\n  }\r\n\r\n  obtainDate = date => (\r\n    new Date(date[0], date[1], date[2], date[3], date[4])\r\n  )\r\n\r\n  obtainSplitDate = (date, regex) => (\r\n    date.split(regex)\r\n  )\r\n\r\n  setDeviceRanges = () => {\r\n\r\n    const regex = new RegExp('[/ :]')\r\n\r\n      this.positions = this.props.positions.filter(position => {\r\n      \r\n      let a = this.obtainSplitDate(position.datetime, regex)\r\n      \r\n      let datePosition = this.obtainDate(a)\r\n\r\n      a = this.obtainSplitDate(this.firstDateTime, regex)\r\n\r\n      let first = this.obtainDate(a)\r\n\r\n      a = this.obtainSplitDate(this.secondDateTime, regex)\r\n\r\n      let final = this.obtainDate(a)\r\n  \r\n      return (first <= datePosition && final >= datePosition)\r\n    })\r\n\r\n    this.forceUpdate()\r\n  }\r\n\r\n  validInput = () => (\r\n    this.firstDateTime && this.secondDateTime\r\n  )\r\n\r\n  handleChangeDateTime = (evt) => {\r\n    \r\n    evt.target.name === 'fi'\r\n      ? this.firstDateTime = evt.target.value\r\n      : this.secondDateTime = evt.target.value\r\n  \r\n    let isFullInputsDate = this.validInput()\r\n    let isValidRangeDates = this.validateRangeDate()\r\n    \r\n    if(isFullInputsDate)\r\n      this.positions = null\r\n\r\n    if(isFullInputsDate && isValidRangeDates){\r\n\r\n      let interval = {\r\n        init : this.firstDateTime,\r\n        final : this.secondDateTime,\r\n        device : this.props.selected\r\n\r\n      }\r\n\r\n      this.props.getIntervalPosition()\r\n      this.setDeviceRanges()\r\n    }\r\n      \r\n  }\r\n\r\n  getArrayDevices = () => (\r\n    toPairs(this.props.devices)\r\n  )\r\n\r\n  selectDevice = value => {\r\n    this.props.selectDevice(value)\r\n    this.positions = null\r\n    this.forceUpdate()\r\n  }\r\n\r\n  addRanges = (evt) => {\r\n\r\n  }\r\n\r\n  render() {\r\n   \r\n    let positions = this.positions || this.props.positions[this.props.positions.length - 1]\r\n  \r\n    return (\r\n      <SectionTracking\r\n        devices = { this.getArrayDevices() }\r\n        positions = { positions }\r\n        selectDevice = { this.selectDevice }\r\n        selected = { this.props.selected }\r\n        handleChangeDateTime = { this.handleChangeDateTime }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  devices : state.devices,\r\n  selected : state.device_selected,\r\n  positions : state.positions[state.device_selected],\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  selectDevice,\r\n  getLastPosition,\r\n  getIntervalPosition\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SectionTrackingView)\r\n","import React from 'react'\r\n\r\nconst SectionValueInModule = () => (\r\n\r\n    <div>\r\n      \r\n    </div>\r\n\r\n)\r\n\r\nexport default SectionValueInModule\r\n","import React from 'react'\r\nimport { Tabs, Icon } from 'antd'\r\nimport SectionValueToMap from './SectionValueToMap'\r\nimport SectionTrackingView from './../../views/UserInterfacePage/OperationSectionView/SectionTrackingView'\r\nimport SectionValueInModule from './SectionValueInModule'\r\n\r\nimport './styles.css'\r\n\r\nconst TabPane  = Tabs.TabPane\r\n\r\nconst getDisabled = (default_activate, type_device) => (\r\n    default_activate !== type_device? true : false\r\n)\r\n\r\nconst tabs = [\r\n    {\r\n        title : 'Valor en mapa',\r\n        type : 'M',\r\n        icon : 'eye',\r\n        Module : SectionValueToMap\r\n    },\r\n    {\r\n        title : 'Seguimiento',\r\n        type : 'S',\r\n        icon : 'fall',\r\n        Module : SectionTrackingView\r\n    },\r\n    {\r\n        title : 'Valor en Modulo',\r\n        type : 'G',\r\n        icon : 'tablet',\r\n        Module : SectionValueInModule\r\n    }\r\n]\r\n\r\nconst OperationSection = ({device_name, data_device}) => {\r\n\r\n    const defaultTabPane = (data_device && data_device.status === 'ACTIVE' && data_device.type)\r\n    console.log(defaultTabPane)\r\n    return(\r\n        <Tabs \r\n            className = 'operation-section'\r\n            defaultActiveKey = { defaultTabPane } \r\n            activeKey = { defaultTabPane } \r\n        >                \r\n            { tabs.map(({type, icon, Module, title}) => (\r\n                <TabPane\r\n                    key = { type } \r\n                    tab = {<span><Icon type = {icon} /> { title } </span>}\r\n                    disabled = { getDisabled(defaultTabPane, type) } >\r\n                    <Module />\r\n                </TabPane>\r\n            )) }\r\n        </Tabs>\r\n    )\r\n}\r\n\r\nexport default OperationSection\r\n\r\n","import React, { Component } from 'react'\r\nimport OperationSection from './../../../components/OperationSection'\r\nimport { connect } from 'react-redux';\r\n\r\nclass OperationSectionView extends Component {\r\n  render() {\r\n\r\n    const { device_name, data_device } = this.props\r\n \r\n    return (\r\n      <OperationSection\r\n        device_name = { device_name }\r\n        data_device = { data_device }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  device_name : state.device_selected,\r\n  data_device : state.devices[state.device_selected]\r\n})\r\n\r\nconst mapDispatchToProps = null\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OperationSectionView)\r\n","import React, { Component} from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport DeviceSectionView from './../../views/UserInterfacePage/SectionDevicesView'\r\nimport DeviceRegisterView from './../../views/UserInterfacePage/FormDeviceView'\r\nimport OperationSectionView from './../../views/UserInterfacePage/OperationSectionView'\r\nimport Footer from './../UserInterface/DefaultFooter'\r\n\r\nclass Dashboard extends Component {\r\n  \r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          <Col xs=\"12\" lg=\"0\">\r\n            <DeviceSectionView />\r\n          </Col>           \r\n        </Row>\r\n       \r\n        <Row>\r\n          <Col xs=\"12\" sm=\"6\">\r\n            <DeviceRegisterView />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row justify = 'center' span = {20}>\r\n          <Col>\r\n            <OperationSectionView />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row justify = 'center' span = {20}>\r\n          <Col>\r\n            <Footer />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;"],"sourceRoot":""}