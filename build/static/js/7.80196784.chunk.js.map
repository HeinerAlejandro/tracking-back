{"version":3,"sources":["components/Profile/ImageProfile.js","components/Profile/ModiFyPasswordComponent.js","components/Profile/index.js","views/UserInterfacePage/ProfileView/index.js"],"names":["es_form","Item","token","localStorage","getItem","type","backend","ImageProfile","state","loading","handleChange","info","file","status","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","imageUrl","_this","props","setUser","setState","react_default","a","createElement","Fragment","reactstrap_es","upload","name","action","URL_PROFILE_IMAGE","onChange","this","showUploadList","listType","headers","Authorization","concat","withCredentials","icon","src","image","styles","width","Component","FormItem","ModiFyPasswordComponent","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","data_reset","new_password1","getFieldValue","new_password2","old_password","reset","compareToFirstPassword","rule","value","validateToNextPassword","validateFields","force","fieldsError","getFieldDecorator","onSubmit","layout","className","ModiFyPasswordComponent_FormItem","rules","required","message","validator","size","prefix","style","color","placeholder","onBlur","handleConfirmBlur","registering","disabled","getFieldsError","Object","keys","some","field","htmlType","React","WrappedChangePasswordForm","create","Profile","xs","lg","ImageProfile_ImageProfile","Profile_ModiFyPasswordComponent","ProfileView","components_Profile","ImageUrl","resetPassword","mapDispatchToProps","connect"],"mappings":"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","file":"static/js/7.80196784.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { \r\n    Form,\r\n    Upload,\r\n    Icon,\r\n    message } from 'antd'\r\n\r\nimport { URL_PROFILE_IMAGE } from '../../constants/withPanel'\r\n\r\nimport { Card } from 'reactstrap';\r\n\r\nconst FormItem = Form.Item\r\n\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n}\r\n\r\nconst token = localStorage.getItem('token')\r\nconst type = localStorage.getItem('type')\r\nconst backend = localStorage.getItem('backend') === null?'':localStorage.getItem('backend')\r\n\r\nexport default class ImageProfile extends Component {\r\n\r\n  state = {\r\n    loading : false\r\n  }\r\n\r\n  handleChange = (info) => {\r\n    if (info.file.status === 'uploading') {\r\n      this.setState({ loading: true });\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl => {\r\n        this.props.setUser({imageUrl})\r\n        this.setState({\r\n        loading: false,\r\n      })});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h3>Agregue una foto de perfil</h3>\r\n        <Card>\r\n            <Upload\r\n                name = 'avatar'\r\n                action = { URL_PROFILE_IMAGE }\r\n                onChange = { this.handleChange }\r\n                showUploadList = { false }\r\n                listType = \"picture-card\"\r\n                headers = {{\r\n                  Authorization : `${type} ${backend} ${token}`\r\n                }}\r\n                withCredentials\r\n            >\r\n              <div>\r\n                <Icon type = { this.state.loading ? 'loading' : 'plus' } />\r\n                <img \r\n                  src = { this.props.image ? this.props.image : '../../reources/user-not-found.png' }\r\n                  styles = {{ width : '300px' }}\r\n                />\r\n\r\n              </div>\r\n            </Upload>\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport {   Card, CardBody, CardHeader, Col ,\r\n    FormText,Input,Button\r\n    ,Label } from 'reactstrap';\r\n\r\nimport { Form, Icon } from 'antd'\r\n\r\nconst FormItem = Form.Item\r\n\r\nfunction hasErrors(fieldsError) {\r\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass ModiFyPasswordComponent extends React.Component {\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n       \r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n          if (!err) {\r\n            const data_reset = {\r\n              new_password1 : this.props.form.getFieldValue('n-password'),\r\n              new_password2 : this.props.form.getFieldValue('n-confirm'),\r\n              old_password : this.props.form.getFieldValue('old_password')\r\n            }\r\n          \r\n            this.props.reset(data_reset)\r\n          }\r\n        });\r\n    }\r\n        \r\n    compareToFirstPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n    \r\n        if (value && value !== form.getFieldValue('n-password')) {\r\n          callback('Las 2 contraseñas son diferentes');\r\n        } else {\r\n          callback();\r\n        }\r\n      }\r\n    \r\n      validateToNextPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value) {\r\n          form.validateFields(['n-confirm'], { force: true });\r\n        }\r\n        callback();\r\n    }\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Card>\r\n                <CardHeader>\r\n                    Modificar Contraseña\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                    <Form \r\n                        onSubmit={this.handleSubmit}\r\n                        layout = 'vertical'\r\n                        className = 'formr'>\r\n            \r\n                        <FormItem>\r\n                            {getFieldDecorator('n-password', {\r\n                                rules: [{\r\n                                required: true, message: 'debes ingresar una contraseña',\r\n                            }, {\r\n                                validator: this.validateToNextPassword,\r\n                            }],\r\n                            })(\r\n                                <Input\r\n                                    type=\"password\" \r\n                                    size = 'large'\r\n                                    prefix = {\r\n                                        <Icon\r\n                                            type = 'lock'\r\n                                            style = {{color : 'gray'}}  \r\n                                        />\r\n                                    }\r\n                                    placeholder = 'contraseña'  \r\n                                />\r\n                        )}\r\n                    </FormItem>\r\n                    <FormItem>\r\n                        {getFieldDecorator('n-confirm', {\r\n                        rules: [{\r\n                            required: true, message: 'Confirma tu contraseña',\r\n                        }, {\r\n                            validator: this.compareToFirstPassword,\r\n                        }],\r\n                        })(\r\n                        <Input\r\n                            type=\"password\"\r\n                            size = 'large'\r\n                            onBlur={this.handleConfirmBlur}\r\n                            prefix = {<Icon type = 'lock' style = {{color : 'gray'}} />} placeholder = 'verificacion' />\r\n                        )}\r\n                    </FormItem>\r\n                    \r\n                    <FormItem>\r\n                        {getFieldDecorator('old_password', {\r\n                        rules: [{\r\n                            required: true, message: 'Introduce tu contraseña actual',\r\n                        }],\r\n                        })(\r\n                        <Input\r\n                            type=\"password\"\r\n                            size = 'large'\r\n                            prefix = {<Icon type = 'lock' style = {{color : 'gray'}} />}\r\n                            placeholder = 'verificacion' />\r\n                        )}\r\n                    </FormItem>\r\n\r\n                    <FormItem>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            className = 'button-login-register'\r\n                            loading = {this.props.registering}\r\n                            disabled = {hasErrors(this.props.form.getFieldsError())}\r\n                            htmlType = 'submit'>\r\n                            Registrese\r\n                        </Button>\r\n                    </FormItem>\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst WrappedChangePasswordForm = Form.create()(ModiFyPasswordComponent)\r\n\r\nexport default WrappedChangePasswordForm\r\n","import React, { Component } from 'react';\r\nimport { Col, Row } from 'reactstrap';\r\nimport ImageProfile from './ImageProfile'\r\nimport FormPassword from './ModiFyPasswordComponent'\r\n\r\nclass Profile extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs=\"12\" lg=\"0\">\r\n            <ImageProfile\r\n              image = { this.props.image }\r\n              setUser = { this.props.setUser }\r\n            />\r\n            <FormPassword\r\n              reset = { this.props.reset }\r\n            />\r\n          </Col>           \r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Profile from '../../../components/Profile'\r\nimport { setUser } from './../../../actions/LoginRegisterAction'\r\nimport { resetPassword } from './../../../actions/PanelActions'\r\n\r\nclass ProfileView extends Component {\r\n  render() {\r\n    return (\r\n      <Profile\r\n        image = { this.props.ImageUrl }\r\n        setUser = { this.props.setUser }\r\n        reset = { resetPassword }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ImageProfile : state.ImageUrl,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  setUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileView)\r\n"],"sourceRoot":""}