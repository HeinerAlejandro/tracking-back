{"version":3,"sources":["components/UserInterface/DefaultFooter.js","hooks/authorizationHook.js","components/DeviceSection/FieldSearch/index.js","components/DeviceSection/DeviceList/DeviceItemTable/Item.js","components/DeviceSection/DeviceList/DeviceItemTable/index.js","components/DeviceSection/DeviceList/layouts/TableLayout/index.js","components/DeviceSection/DeviceList/layouts/TableLayout/Header.js","components/DeviceSection/DeviceList/layouts/TableLayout/Body.js","components/DeviceSection/DeviceList/layouts/DropdownLayout/index.js","components/DeviceSection/DeviceList/index.js","components/DeviceSection/ButtonsOperation.js","components/DeviceSection/index.js","views/UserInterfacePage/SectionDevicesView.js","components/SectionDeviceRegister/FormDevice/index.js","components/SectionDeviceRegister/index.js","views/UserInterfacePage/FormDeviceView.js","components/Map/IconMarker.js","components/Map/index.js","components/OperationSection/SectionValueToMap.js","components/OperationSection/SectionTracking/panelOptions.js","components/OperationSection/SectionTracking/index.js","views/UserInterfacePage/OperationSectionView/SectionTrackingView/index.js","components/OperationSection/SectionValueInModule.js","components/OperationSection/index.js","views/UserInterfacePage/OperationSectionView/index.js","components/Dashboard/Dashboard.js"],"names":["DefaultFooter","_this$props","this","props","children","Object","C_Users_Wilmer_preact_tracking_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","Fragment","href","className","Component","defaultProps","authorizationHook","WrapComponent","authorizationComponent","_Component","C_Users_Wilmer_preact_tracking_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_Wilmer_preact_tracking_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Wilmer_preact_tracking_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","C_Users_Wilmer_preact_tracking_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_Wilmer_preact_tracking_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","isSuperuser","react__WEBPACK_IMPORTED_MODULE_5___default","antd__WEBPACK_IMPORTED_MODULE_7__","type","connect","state","data_user","role","Search","Input","Option","Select","SearchField","react_default","es_select","defaultValue","id","style","width","marginBottom","size","onChange","handleFilter","placeholder","envolveTd","data","Item","_ref","values","_ref$forDefault","forDefault","_ref$optionStyle","optionStyle","toRender","console","log","Array","isArray","toSelect","name","envolveSelect","map","styles","Item_Option","DeviceItemTable","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","selectDevice","getItemChildrenLayoutRenderDevice","bind","assertThisInitialized","getDataOptionDevice","getDataColumnsDevice","DeviceItemTable_Option","_this$props2","SelectOp","Item_Item","typee","date_register","status","es_button","disabled","onClick","background","border","icon","data_render","TableLayout","reactstrap_es","responsive","striped","Header","Body","DropdownLayout","selected","DeviceList","getColumnsDevices","columns_header","columnOperation","column","getDevices","devices","deviceOperation","getSimpleList","devices_name","getItem","device","DeviceList_DeviceItemTable","filter","getTable","getSelect","Data","PureComponent","ButtonsOperation","color","fontColor","backgroundColor","borderColor","DeviceSection","getColums","handleClickRegister","visible_form","setVisibleForm","getButtonsOperations","row","gutter","col","span","DeviceSection_ButtonsOperation","getCardTable","margin","FieldSearch","handleChangeSearch","DeviceSection_DeviceList","card","visible","SectionDevicesView","componentDidMount","getDevicesFromServer","target","setFilterSearchDevice","isDeviceInList","regex","filter_search","toUpperCase","search","toPairs","length","src_components_DeviceSection","mapDispatchToProps","setDevices","visible_form_device","Form","tooltip","title","FormDevice_Option","create","onHandleSubmit","es_form","onSubmit","FormDevice_Item","input","maxLength","htmlType","SectionDeviceRegister","onCancel","modal","centered","footer","align","SectionDeviceRegister_FormDevice","onSubmitDevice","FormDeviceView","e","preventDefault","document","getElementsByName","fetchCreateDevice","SectionDeviceRegister_SectionDeviceRegister","React","library","add","faMapMarker","faTabletAlt","colorMarker","RandomColor","IconMarker","react_fontawesome_index_es","position","bottom","left","iconMarkup","renderToStaticMarkup","optionRender","divIcon","html","MapDevices","positions","coordenate","lat","lon","Map","center","zoom","TileLayer","url","Marker","Popup","Polyline","SectionValueToMap","offset","components_Map","panelOptions","handleChangeDateTime","htmlFor","xs","md","lg","xl","panel","SectionTracking","justify","SectionTracking_panelOptions","SectionTrackingView","componentWillMount","prevProps","nextProps","getLastPosition","device_selected","validateRangeDate","RegExp","test","firstDateTime","secondDateTime","setDeviceRanges","obtainDate","date","Date","obtainSplitDate","split","datetime","datePosition","first","final","forceUpdate","validInput","evt","isFullInputsDate","isValidRangeDates","getArrayDevices","addRanges","OperationSection_SectionTracking","getIntervalPosition","SectionValueInModule","TabPane","Tabs","tabs","Module","OperationSection","device_name","data_device","defaultTabPane","defaultActiveKey","activeKey","_ref2","default_activate","type_device","tab","es_icon","OperationSectionView","components_OperationSection","Dashboard","loading","UserInterfacePage_SectionDevicesView","sm","UserInterfacePage_FormDeviceView","UserInterfacePage_OperationSectionView"],"mappings":"sKASMA,mLACK,IAAAC,EAG6BC,KAAKC,MAHlCF,EAGCG,SAHDC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,cAKP,OACEM,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,qBAAR,UAAN,4BACAJ,EAAAC,EAAAC,cAAA,QAAMG,UAAU,WAAhB,cAAqCL,EAAAC,EAAAC,cAAA,KAAGE,KAAK,2BAAR,6BATjBE,aAgB5Bb,EAAcc,aAlBO,GAoBNd,0HCJAe,IAnBW,SAAAC,GAAiB,IACjCC,EADiC,SAAAC,GAAA,SAAAD,IAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAH,KAAAe,GAAAZ,OAAAe,EAAA,EAAAf,CAAAH,KAAAG,OAAAgB,EAAA,EAAAhB,CAAAY,GAAAK,MAAApB,KAAAqB,YAAA,OAAAlB,OAAAmB,EAAA,EAAAnB,CAAAY,EAAAC,GAAAb,OAAAoB,EAAA,EAAApB,CAAAY,EAAA,EAAAS,IAAA,SAAAC,MAAA,WAM/B,OAFmBzB,KAAKC,MAAMyB,aAGZC,EAAArB,EAAAC,cAACO,EAAkBd,KAAKC,QAAa0B,EAAArB,EAAAC,cAACqB,EAAA,EAAD,CAAMC,KAAO,gBAPrCd,EAAA,CACFJ,aAerC,OAAOmB,YAJiB,SAAAC,GAAK,MAAK,CAC9BL,YAAcK,EAAMC,UAAUC,OAGF,KAAzBH,CAA+Bf,gOChBpCmB,EAASC,IAAMD,OACfE,EAASC,IAAOD,OA4BPE,GAxBXC,EAAAjC,EAAAC,cAACiC,EAAA,EAAD,CACIC,aAAe,KACfF,EAAAjC,EAAAC,cAAC6B,EAAD,CAAQX,MAAQ,KAAhB,KAGAc,EAAAjC,EAAAC,cAAC6B,EAAD,CAAQX,MAAQ,KAAhB,KAGAc,EAAAjC,EAAAC,cAAC6B,EAAD,CAAQX,MAAQ,KAAhB,MAMY,SAAAxB,GAAK,OACjBsC,EAAAjC,EAAAC,cAAC2B,EAAD,CACIQ,GAAK,oBACLC,MAAS,CAACC,MAAO,IAAKC,aAAc,IACpCC,KAAO,QACPC,SAAa9C,EAAM+C,aACnBC,YAAc,0DC1BpBb,EAASC,IAAOD,OAEhBc,EAAY,SAAAC,GAAI,OAClBZ,EAAAjC,EAAAC,cAAA,UACK4C,IA0BIC,EAAO,SAAAC,GAA2D,IAAzDxB,EAAyDwB,EAAzDxB,KAAMyB,EAAmDD,EAAnDC,OAAmDC,EAAAF,EAA3CG,kBAA2C,IAAAD,EAA9B,KAA8BA,EAAAE,EAAAJ,EAAxBK,mBAAwB,IAAAD,EAAV,KAAUA,EACvEE,EAAW,KAOf,GALAC,QAAQC,IAAIP,GACA,WAATzB,GAAuC,kBAAXyB,IAC3BK,EAAWT,EAAUI,IAGb,WAATzB,GAAqBiC,MAAMC,QAAQT,IAAWE,EAAW,CAExD,IAMIQ,EA7BU,SAACb,EAAMK,GAAP,OAClBjB,EAAAjC,EAAAC,cAACiC,EAAA,EAAD,CACIG,MAAS,CAAEC,MAAQ,KACnBH,aAAiBe,EACjBS,KAAK,SACLvD,UAAU,UAGZyC,GAqBiBe,CANKZ,EAAOa,IAAI,SAAA1C,GAC3B,IAjCU0B,EAAMiB,EAmChB,OAnCUjB,EAiCgB1B,EAjCV2C,EAiCiBV,EAhCzCnB,EAAAjC,EAAAC,cAAC8D,EAAD,CACI5C,MAAU0B,EACVR,MAAUyB,GAETjB,KAiC2CK,GAE5CG,EAAWT,EAAUc,GAGzB,OAAOL,GCjDLvB,EAASC,IAAOD,OAsHPkC,cA9Gb,SAAAA,EAAYrE,GAAM,IAAAsE,EAAA,OAAApE,OAAAqE,EAAA,EAAArE,CAAAH,KAAAsE,IAChBC,EAAApE,OAAAsE,EAAA,EAAAtE,CAAAH,KAAAG,OAAAuE,EAAA,EAAAvE,CAAAmE,GAAAK,KAAA3E,KAAMC,KAwBR2E,YAAc,WAAM,IAAA7E,EACawE,EAAKtE,MAA5BgE,EADUlE,EACVkE,MAERY,EAHkB9E,EACJ8E,cAEDZ,IAzBbM,EAAKO,kCAAoCP,EAAKO,kCAAkCC,KAAvC5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KAEzCA,EAAKU,oBAAsBV,EAAKU,oBAAoBF,KAAzB5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KAC3BA,EAAKW,qBAAuBX,EAAKW,qBAAqBH,KAA1B5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KAE5BA,EAAKK,YAAcL,EAAKK,YAAYG,KAAjB5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KARHA,qFAWG,IAEXN,EAASjE,KAAKC,MAAdgE,KAER,OACE1B,EAAAjC,EAAAC,cAAC4E,EAAD,CACE3D,IAAQyC,EACRxC,MAAUwC,GAERA,kDAWc,IAAAmB,EAEGpF,KAAKC,MAApBkD,EAFYiC,EAEZjC,KAAMc,EAFMmB,EAENnB,KAuBRoB,EAAWxE,YAAkBuC,GAEnC,OAEEb,EAAAjC,EAAAC,cAAAgC,EAAAjC,EAAAE,SAAA,KACE+B,EAAAjC,EAAAC,cAAC+E,EAAD,CACEzD,KAAO,SACPyB,OAAWW,IAEb1B,EAAAjC,EAAAC,cAAC+E,EAAD,CACEzD,KAAO,SACPyB,OAAWH,EAAKoC,QAElBhD,EAAAjC,EAAAC,cAAC+E,EAAD,CACEzD,KAAO,SACPyB,OAAWH,EAAKqC,gBAGlBjD,EAAAjC,EAAAC,cAAC8E,EAAD,CACExD,KAAO,SACP2B,WAAcL,EAAKsC,OACnB/B,YAAe,CAAEd,MAAQ,SACzBU,OAAW,CAAC,SAAU,cAIxBf,EAAAjC,EAAAC,cAAA,UACEgC,EAAAjC,EAAAC,cAACmF,EAAA,EAAD,CACEC,SAA6B,WAAhBxC,EAAKsC,OAClBG,QAAY5F,KAAK4E,YACjBjC,MAAS,CAAEkD,WAAa,OAAQC,OAAQ,QACxCC,KAAO,sEAQf,MAA2B,cAApB/F,KAAKC,MAAM4B,KACd7B,KAAKkF,uBACLlF,KAAKiF,uDAITrB,QAAQC,IAAI7D,KAAKC,MAAM4B,MACvB,IAAMmE,EAAchG,KAAK8E,oCAEzB,OACEvC,EAAAjC,EAAAC,cAAAgC,EAAAjC,EAAAE,SAAA,KAAIwF,UA3GoBrF,sBCNxBsF,EAAc,SAAA5C,GAAA,IAAGnD,EAAHmD,EAAGnD,SAAH,OAChBqC,EAAAjC,EAAAC,cAAC2F,EAAA,EAAD,CAAOC,YAAU,EAACC,SAAO,GACnBlG,IAIV+F,EAAYI,OCTG,SAAAhD,GAAA,IAAGnD,EAAHmD,EAAGnD,SAAH,OACXqC,EAAAjC,EAAAC,cAAA,aACIgC,EAAAjC,EAAAC,cAAA,UACML,KDOd+F,EAAYK,KEVC,SAAAjD,GAAA,IAAGnD,EAAHmD,EAAGnD,SAAH,OACTqC,EAAAjC,EAAAC,cAAA,aACML,IFUK+F,QGGAM,GAfAlE,IAAOD,OAEC,SAACnC,GAEpB,OACIsC,EAAAjC,EAAAC,cAACiC,EAAA,EAAD,CACIO,SAAa9C,EAAM4E,aACnBZ,KAAO,gBACPvB,GAAK,gBACLD,aAAiBxC,EAAMuG,UACrBvG,EAAMC,YCuFLuG,cA3Fb,SAAAA,EAAYxG,GAAM,IAAAsE,EAAA,OAAApE,OAAAqE,EAAA,EAAArE,CAAAH,KAAAyG,IAEhBlC,EAAApE,OAAAsE,EAAA,EAAAtE,CAAAH,KAAAG,OAAAuE,EAAA,EAAAvE,CAAAsG,GAAA9B,KAAA3E,KAAMC,KAcRyG,kBAAoB,kBAClBnC,EAAKtE,MAAM0G,gBAAkBpC,EAAKtE,MAAM0G,eAAexC,IAAII,EAAKqC,kBAjBhDrC,EAoBlBqC,gBAAkB,SAAAC,GAAM,OAAKtE,EAAAjC,EAAAC,cAAA,MAAIiB,IAAOqF,GAAUA,IApBhCtC,EAsBlBuC,WAAa,kBACXvC,EAAKtE,MAAM8G,SAAWxC,EAAKtE,MAAM8G,QAAQ5C,IAAII,EAAKyC,kBAvBlCzC,EA0BlB0C,cAAgB,SAACC,GAAD,OACd3E,EAAAjC,EAAAC,cAACiC,EAAA,EAAOJ,OAAR,CAAeX,MAAUyF,GAAiBA,IA3B1B3C,EA8BlB4C,QAAU,SAAAC,GACR,MACsB,UAApB7C,EAAKtE,MAAM4B,KAAkBU,EAAAjC,EAAAC,cAAC8G,EAAD,CACzBxC,aAAiBN,EAAKtE,MAAM4E,aAC5BrD,IAAQ4F,EAAO,GACfnD,KAASmD,EAAO,GAChBjE,KAASiE,EAAO,GAChBvF,KAAS,OAAS0C,EAAKtE,MAAM4B,OAC3B0C,EAAK0C,cAAcG,EAAO,KAtClB7C,EA0ClByC,gBAAkB,SAAAI,GAChB,IAAIhE,EAAO,KAKX,OAHImB,EAAKtE,MAAMqH,QAAWF,EAAO,GAAG,KAAO7C,EAAKtE,MAAMqH,SACpDlE,EAAOmB,EAAK4C,QAAQC,IAEM,UAArB7C,EAAKtE,MAAM4B,KACdU,EAAAjC,EAAAC,cAAA,UAAM6C,GACNA,GAlDYmB,EAqDlBgD,SAAW,SAAAtB,GAAW,OACpB1D,EAAAjC,EAAAC,cAAC0F,EAAD,KACE1D,EAAAjC,EAAAC,cAAC0F,EAAYI,OAAb,KACI9B,EAAKmC,qBAETnE,EAAAjC,EAAAC,cAAC0F,EAAYK,KAAb,KACI/B,EAAKuC,gBA3DKvC,EAgElBiD,UAAY,SAAAjB,GAAc,OACxBhE,EAAAjC,EAAAC,cAACgG,EAAD,CACE1B,aAAiBN,EAAKtE,MAAM4E,aAC5B2B,SAAajC,EAAKtE,MAAMuG,UAEtBjC,EAAKuC,eAjETvC,EAAKmC,kBAAoBnC,EAAKmC,kBAAkB3B,KAAvB5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KACzBA,EAAKqC,gBAAkBrC,EAAKqC,gBAAgB7B,KAArB5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KAEvBA,EAAKuC,WAAavC,EAAKuC,WAAW/B,KAAhB5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KAClBA,EAAKyC,gBAAkBzC,EAAKyC,gBAAgBjC,KAArB5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KAEvBA,EAAKgD,SAAWhD,EAAKgD,SAASxC,KAAd5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KAChBA,EAAKiD,UAAYjD,EAAKiD,UAAUzC,KAAf5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KAEjBA,EAAK4C,QAAU5C,EAAK4C,QAAQpC,KAAb5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KAbCA,wEA2EhB,IAAIkD,EAAO,KAUX,MARuB,UAApBzH,KAAKC,MAAM4B,KAEZ4F,EAAOzH,KAAKuH,SAAStB,GAEK,WAApBjG,KAAKC,MAAM4B,OAEjB4F,EAAOzH,KAAKwH,UAAUjB,IAGtBhE,EAAAjC,EAAAC,cAAAgC,EAAAjC,EAAAE,SAAA,KAAIiH,UAxFeC,iBCUVC,EAbU,SAAAtE,GAAA,IAAG0C,EAAH1C,EAAG0C,KAAM6B,EAATvE,EAASuE,MAAOnG,EAAhB4B,EAAgB5B,MAAOmE,EAAvBvC,EAAuBuC,QAAS/D,EAAhCwB,EAAgCxB,KAAMgG,EAAtCxE,EAAsCwE,UAAtC,OACrBtF,EAAAjC,EAAAC,cAACmF,EAAA,EAAD,CACI/C,MAAS,CAAEmF,gBAAkBF,EAAOA,MAAQC,EAAWE,YAAaH,GACpE9E,KAAO,QACPjB,KAASA,EACTkE,KAASA,EACTH,QAAYA,GAGVnE,IC6FKuG,qBA7Fb,SAAAA,EAAY/H,GAAM,IAAAsE,EAAA,OAAApE,OAAAqE,EAAA,EAAArE,CAAAH,KAAAgI,IAEhBzD,EAAApE,OAAAsE,EAAA,EAAAtE,CAAAH,KAAAG,OAAAuE,EAAA,EAAAvE,CAAA6H,GAAArD,KAAA3E,KAAMC,KAQRgI,UAAY,kBACV1D,EAAKtE,MAAMgC,KACP,CACA,SACA,OACA,oBACA,SACA,IAGA,CACA,SACA,OACA,oBACA,KAxBYsC,EA4BlB2D,oBAAsB,kBACpB3D,EAAKtE,MAAMkI,aACL5D,EAAKtE,MAAMmI,gBAAe,GAC1B7D,EAAKtE,MAAMmI,gBAAe,IA/BhB7D,EAkClB8D,qBAAuB,kBACrB9F,EAAAjC,EAAAC,cAAC+H,EAAA,EAAD,CAAKC,OAAW,IACdhG,EAAAjC,EAAAC,cAACiI,EAAA,EAAD,CAAKC,KAAS,GACZlG,EAAAjC,EAAAC,cAACmI,EAAD,CACEjH,MAAQ,YACRsE,KAAO,cACP6B,MAAQ,gBACRhC,QAAYrB,EAAK2D,oBACjBrG,KAAO,aAGXU,EAAAjC,EAAAC,cAACiI,EAAA,EAAD,CAAKC,KAAS,GACZlG,EAAAjC,EAAAC,cAACmI,EAAD,CACEjH,MAAQ,UACRsE,KAAO,WACP6B,MAAQ,UACRC,UAAY,QACZjC,QAAY,KACZ/D,KAAO,eApDG0C,EA0DlBoE,aAAe,WAAM,IAEX5B,EAAYxC,EAAKtE,MAAjB8G,QAER,OACExE,EAAAjC,EAAAC,cAAC2F,EAAA,EAAD,CAAMvD,MAAS,CAAEC,MAAQ,SAAUgG,OAAS,SAC1CrG,EAAAjC,EAAAC,cAAC2F,EAAA,EAAD,iCAGA3D,EAAAjC,EAAAC,cAAC2F,EAAA,EAAD,KACI3D,EAAAjC,EAAAC,cAACsI,EAAD,CAAiB7F,aAAiBuB,EAAKtE,MAAM6I,qBAC/CvG,EAAAjC,EAAAC,cAACwI,EAAD,CACEpC,eAAmBpC,EAAK0D,YACxBlB,QAAYA,EACZlF,KAAO,QACPgD,aAAiBN,EAAKtE,MAAM4E,eAE5BN,EAAK8D,0BAvEb9D,EAAK8D,qBAAuB9D,EAAK8D,qBAAqBtD,KAA1B5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KAC5BA,EAAKoE,aAAepE,EAAKoE,aAAa5D,KAAlB5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KACpBA,EAAK2D,oBAAsB3D,EAAK2D,oBAAoBnD,KAAzB5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KAC3BA,EAAK0D,UAAY1D,EAAK0D,UAAUlD,KAAf5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KAPDA,wEAmFhB,IAAMyE,EAAOhJ,KAAKC,MAAMgJ,QACpBjJ,KAAK2I,eACL3I,KAAKqI,uBAET,OACE9F,EAAAjC,EAAAC,cAAAgC,EAAAjC,EAAAE,SAAA,KAAIwI,UA1FkBrI,gDCItBuI,cAOF,SAAAA,EAAYjJ,GAAM,IAAAsE,EAAA,OAAApE,OAAAqE,EAAA,EAAArE,CAAAH,KAAAkJ,IACd3E,EAAApE,OAAAsE,EAAA,EAAAtE,CAAAH,KAAAG,OAAAuE,EAAA,EAAAvE,CAAA+I,GAAAvE,KAAA3E,KAAMC,KANVkJ,kBAAoB,WACZ5E,EAAKtE,MAAMmH,QACX7C,EAAKtE,MAAMmJ,wBAGD7E,EAQlBuE,mBAAqB,SAAAzF,GAAgB,IAC3B5B,EAD2B4B,EAAbgG,OACd5H,MAEN8C,EAAKtE,MAAMqJ,sBAAsB7H,IAXnB8C,EAclBgF,eAAiB,SAACnC,GAEd,IAAMoC,EAAQjF,EAAKtE,MAAMwJ,cAAcC,cACvC,OAAOtC,EAAO,GAAGuC,OAAOH,IAAU,GAjBpBjF,EAoBlBuC,WAAa,kBACT8C,IAAQrF,EAAKtE,MAAM8G,UAlBnBxC,EAAKuE,mBAAqBvE,EAAKuE,mBAAmB/D,KAAxB5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KAE1BA,EAAKuC,WAAavC,EAAKuC,WAAW/B,KAAhB5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KALJA,wEA0Bd,IAAI+C,EAAStH,KAAKC,MAAMwJ,cACpB1C,EAAuB,KAAXO,GAAiBtH,KAAK8G,cACnB,KAAXQ,GAAiBtH,KAAK8G,aAAaQ,OAAOtH,KAAKuJ,gBAEnDN,EAAUjJ,KAAK8G,aAAa+C,OAAS,EAEzC,OACItH,EAAAjC,EAAAC,cAACuJ,EAAD,CACI7H,KAASjC,KAAKC,MAAMgC,KACpB8E,QAAYA,EACZ+B,mBAAuB9I,KAAK8I,mBAC5BX,aAAiBnI,KAAKC,MAAMkI,aAC5BC,eAAmBpI,KAAKC,MAAMmI,eAC9Ba,QAAYA,EACZpE,aAAiB7E,KAAKC,MAAM4E,sBA/CXlE,aA4D3BoJ,EAAqB,CACvBT,0BACAlB,mBACA4B,eACAnF,iBACAuE,0BAGWtH,cAfS,SAAAC,GAAK,MAAK,CAC9BE,KAAOF,EAAMC,UAAUC,KACvB8E,QAAUhF,EAAMgF,QAChB0C,cAAgB1H,EAAM0H,cACtBtB,aAAepG,EAAMkI,sBAWeF,EAAzBjI,CAA6CoH,8BC9EtD9F,UAAO8G,IAAK9G,MACZhB,EAASC,IAAOD,OAsCP8H,GAjCX3H,EAAAjC,EAAAC,cAAC4J,EAAA,EAAD,CAASC,MAHL,iFAIA7H,EAAAjC,EAAAC,cAACiC,EAAA,EAAD,CAAQC,aAAe,KACnBF,EAAAjC,EAAAC,cAAC8J,EAAD,CAAQ5I,MAAQ,KAAhB,KACAc,EAAAjC,EAAAC,cAAC8J,EAAD,CAAQ5I,MAAQ,KAAhB,KACAc,EAAAjC,EAAAC,cAAC8J,EAAD,CAAQ5I,MAAQ,KAAhB,OA6BGyI,IAAKI,QAALJ,CAxBI,SAAA7G,GAAA,IAAGkH,EAAHlH,EAAGkH,eAAH,OACfhI,EAAAjC,EAAAC,cAACiK,EAAA,EAAD,CAAM9J,UAAY,kBACd+J,SAAaF,GAGbhI,EAAAjC,EAAAC,cAACmK,EAAD,KACInI,EAAAjC,EAAAC,cAACoK,EAAA,EAAD,CACI1G,KAAO,sBACPpC,KAAO,OACP+I,UAAc,EACd3H,YAAc,YAItBV,EAAAjC,EAAAC,cAACmK,EAAD,KACInI,EAAAjC,EAAAC,cAACmF,EAAA,EAAD,CACImF,SAAW,UADf,kBC9BSC,cAEnB,SAAAA,EAAY7K,GAAM,IAAAsE,EAAA,OAAApE,OAAAqE,EAAA,EAAArE,CAAAH,KAAA8K,IAChBvG,EAAApE,OAAAsE,EAAA,EAAAtE,CAAAH,KAAAG,OAAAuE,EAAA,EAAAvE,CAAA2K,GAAAnG,KAAA3E,KAAMC,KAKR8K,SAAW,WACTxG,EAAKtE,MAAMmI,gBAAe,IAJ1B7D,EAAKwG,SAAWxG,EAAKwG,SAAShG,KAAd5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KAHAA,wEAWhB,OACEhC,EAAAjC,EAAAC,cAACyK,EAAA,EAAD,CACEpI,MAAQ,QACRqI,UAAQ,EACRhC,QAAYjJ,KAAKC,MAAMkI,aACvB+C,OAAW,KACXH,SAAa/K,KAAK+K,UAElBxI,EAAAjC,EAAAC,cAAA,qCACAgC,EAAAjC,EAAAC,cAAC+H,EAAA,EAAD,CAAK6C,MAAQ,UACX5I,EAAAjC,EAAAC,cAACiI,EAAA,EAAD,CAAKC,KAAS,IACZlG,EAAAjC,EAAAC,cAAC6K,EAAD,CAAYb,eAAmBvK,KAAKC,MAAMoL,2BAxBH1K,aCM7C2K,6MACJD,eAAiB,SAACE,GAEhBA,EAAEC,iBAEF,IAAIpE,EAASqE,SAASC,kBAAkB,uBAAuB,GAAGjK,MAClEmC,QAAQC,IAAI,wBAA0BuD,GACtC7C,EAAKtE,MAAM0L,kBAAkBvE,4EAK7B,OACI7E,EAAAjC,EAAAC,cAACqL,EAAD,CACIzD,aAAiBnI,KAAKC,MAAMkI,aAC5BC,eAAmBpI,KAAKC,MAAMmI,eAC9BiD,eAAmBrL,KAAKqL,wBAhBPQ,IAAMlL,WA2B7BoJ,EAAqB,CACvB3B,mBACAuD,uBAGW7J,cAVS,SAAAC,GAAK,MAAK,CAC9BoG,aAAepG,EAAMkI,sBASeF,EAAzBjI,CAA6CwJ,0IC9B5DQ,KAAQC,IAAIC,MACZF,KAAQC,IAAIE,MAEZ,IAYMC,GAAcC,OAEdC,GACF7J,EAAAjC,EAAAC,cAAA,WACIgC,EAAAjC,EAAAC,cAAC8L,GAAA,EAAD,CACItG,KAASiG,KACTpE,MAAUsE,GACVpJ,KAAO,KACPH,MAdQ,CAChB2J,SAAW,WACXC,OAAS,OACTC,KAAO,UAaAjK,EAAAjC,EAAAC,cAAC8L,GAAA,EAAD,CACCtG,KAASkG,KACTrE,MAAQ,QACR9E,KAAO,KACPH,MA1BS,CACjB2J,SAAU,WACVE,KAAO,MACPD,OAAS,WA6BPE,GAAaC,gCAAqBN,IAKzBO,GAJMC,mBAAQ,CACzBC,KAAMJ,KCJKK,WArCI,SAAAzJ,GAAmB,IAAhB0J,EAAgB1J,EAAhB0J,UAGdT,EAAW,KAIXA,EAFAxI,MAAMC,QAAQgJ,GAEHA,EADEA,EAAUlD,OAAS,GAGrBkD,EAEf,IAAMC,EAAaD,GAAa,CAACT,EAASW,IAAKX,EAASY,KAExD,OACI3K,EAAAjC,EAAAC,cAAC4M,EAAA,EAAD,CACIzM,UAAY,wBACZ0M,OAAWJ,GAAc,CAAC,SAAU,MACpCK,KAAS,IAET9K,EAAAjC,EAAAC,cAAC+M,EAAA,EAAD,CACIC,IAAI,uDAGRhL,EAAAjC,EAAAC,cAACiN,EAAA,EAAD,CACIzH,KAASqG,GACTE,SAAaU,GACZzK,EAAAjC,EAAAC,cAACkN,GAAA,EAAD,4BAA2BlL,EAAAjC,EAAAC,cAAA,WAA3B,yBAGLgC,EAAAjC,EAAAC,cAACmN,GAAA,EAAD,CACIX,UAAaA,EACbnF,MAAQ,eCvBT+F,GAZW,WACxB,OACEpL,EAAAjC,EAAAC,cAAA,WACEgC,EAAAjC,EAAAC,cAAC+H,EAAA,EAAD,CAAKC,OAAW,IACdhG,EAAAjC,EAAAC,cAACiI,EAAA,EAAD,CAAKC,KAAS,GAAKmF,OAAW,GAC5BrL,EAAAjC,EAAAC,cAACsN,GAAD,UC2CKC,GAhDM,SAAAzK,GAA+D,IAA5D0D,EAA4D1D,EAA5D0D,QAASP,EAAmDnD,EAAnDmD,SAAUuH,EAAyC1K,EAAzC0K,qBAAsBlJ,EAAmBxB,EAAnBwB,aAE/D,OACEtC,EAAAjC,EAAAC,cAAA,OAAKG,UAAY,mCACf6B,EAAAjC,EAAAC,cAACwI,EAAD,CACElH,KAAO,SACPkF,QAAYA,EACZlC,aAAiBA,EACjB2B,SAAaA,EACbc,OAAS,MAEX/E,EAAAjC,EAAAC,cAAC+H,EAAA,EAAD,CAAKC,OAAW,IACdhG,EAAAjC,EAAAC,cAACiI,EAAA,EAAD,CAAKC,KAAS,GACZlG,EAAAjC,EAAAC,cAAA,SAAOyN,QAAU,MAAjB,WAEFzL,EAAAjC,EAAAC,cAACiI,EAAA,EAAD,CAAKoF,OAAW,GACdrL,EAAAjC,EAAAC,cAACoK,EAAA,EAAD,CACIjI,GAAK,KACLuB,KAAO,KACPvD,UAAY,wBACZqC,SAAagL,EACblM,KAAO,eAIfU,EAAAjC,EAAAC,cAAC+H,EAAA,EAAD,CAAMC,OAAW,IACfhG,EAAAjC,EAAAC,cAACiI,EAAA,EAAD,CAAMC,KAAS,GACblG,EAAAjC,EAAAC,cAAA,SAAOyN,QAAU,MAAjB,UAEFzL,EAAAjC,EAAAC,cAACiI,EAAA,EAAD,CAAKoF,OAAW,GACdrL,EAAAjC,EAAAC,cAACoK,EAAA,EAAD,CACIjI,GAAK,KACLuB,KAAO,KACPvD,UAAY,wBAEZqC,SAAagL,EACblM,KAAO,eAKbU,EAAAjC,EAAAC,cAACmF,EAAA,EAAD,wBCxCFvB,GAAM,CACV8J,GAAK,GACLC,GAAK,GACLC,GAAK,GACLC,GAAK,IAGDC,GAAQ,CACZJ,GAAK,GACLC,GAAK,GACLC,GAAK,GACLC,GAAK,GA0BQE,GAtBS,SAAAjL,GAA0E,IAAvE0D,EAAuE1D,EAAvE0D,QAASgG,EAA8D1J,EAA9D0J,UAAWvG,EAAmDnD,EAAnDmD,SAAUuH,EAAyC1K,EAAzC0K,qBAAsBlJ,EAAmBxB,EAAnBwB,aAE7E,OACEtC,EAAAjC,EAAAC,cAAA,WACEgC,EAAAjC,EAAAC,cAAC+H,EAAA,EAAD,CAAKC,OAAW,GAAKgG,QAAU,gBAAgBpD,MAAQ,UACrD5I,EAAAjC,EAAAC,cAACiI,EAAA,EAAS6F,GACR9L,EAAAjC,EAAAC,cAACiO,GAAD,CACET,qBAAyBA,EACzBvH,SAAaA,EACb3B,aAAiBA,EACjBkC,QAAYA,KAGhBxE,EAAAjC,EAAAC,cAACiI,EAAA,EAASrE,GACL4I,GAAaxK,EAAAjC,EAAAC,cAACsN,GAAD,CAAKd,UAAcA,QCvBvC0B,eAEJ,SAAAA,EAAYxO,GAAM,IAAAsE,EAAA,OAAApE,OAAAqE,EAAA,EAAArE,CAAAH,KAAAyO,IAChBlK,EAAApE,OAAAsE,EAAA,EAAAtE,CAAAH,KAAAG,OAAAuE,EAAA,EAAAvE,CAAAsO,GAAA9J,KAAA3E,KAAMC,KAeRyO,mBAAqB,SAACC,EAAWC,GAChChL,QAAQC,IAAI8K,GACZ/K,QAAQC,IAAI+K,IAlBKrK,EAqBlB4E,kBAAoB,WAClB5E,EAAKtE,MAAM4O,gBAAgBtK,EAAKtE,MAAM6O,kBAtBtBvK,EAyBlBwK,kBAAoB,WAElB,IAAMvF,EAAQ,IAAIwF,OAAO,sFAEzB,SAAGxF,EAAMyF,KAAK1K,EAAK2K,iBAAkB1F,EAAMyF,KAAK1K,EAAK4K,mBAEnD5K,EAAK6K,mBAEE,IAjCO7K,EAuClB8K,WAAa,SAAAC,GAAI,OACf,IAAIC,KAAKD,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAxClC/K,EA0ClBiL,gBAAkB,SAACF,EAAM9F,GAAP,OAChB8F,EAAKG,MAAMjG,IA3CKjF,EA8ClB6K,gBAAkB,WAEhB,IAAM5F,EAAQ,IAAIwF,OAAO,SAEvBzK,EAAKwI,UAAYxI,EAAKtE,MAAM8M,UAAUzF,OAAO,SAAAgF,GAE7C,IAAIhM,EAAIiE,EAAKiL,gBAAgBlD,EAASoD,SAAUlG,GAE5CmG,EAAepL,EAAK8K,WAAW/O,GAEnCA,EAAIiE,EAAKiL,gBAAgBjL,EAAK2K,cAAe1F,GAE7C,IAAIoG,EAAQrL,EAAK8K,WAAW/O,GAE5BA,EAAIiE,EAAKiL,gBAAgBjL,EAAK4K,eAAgB3F,GAE9C,IAAIqG,EAAQtL,EAAK8K,WAAW/O,GAE5B,OAAQsP,GAASD,GAAgBE,GAASF,IAG5CpL,EAAKuL,eAnEWvL,EAsElBwL,WAAa,kBACXxL,EAAK2K,eAAiB3K,EAAK4K,gBAvEX5K,EA0ElBwJ,qBAAuB,SAACiC,GAEF,OAApBA,EAAI3G,OAAOpF,KACPM,EAAK2K,cAAgBc,EAAI3G,OAAO5H,MAChC8C,EAAK4K,eAAiBa,EAAI3G,OAAO5H,MAErC,IAAIwO,EAAmB1L,EAAKwL,aACxBG,EAAoB3L,EAAKwK,oBAE1BkB,IACD1L,EAAKwI,UAAY,MAEhBkD,GAAoBC,GACrB3L,EAAK6K,mBAvFS7K,EA0FlB4L,gBAAkB,kBAChBvG,IAAQrF,EAAKtE,MAAM8G,UA3FHxC,EA8FlBM,aAAe,SAAApD,GACb8C,EAAKtE,MAAM4E,aAAapD,GACxB8C,EAAKwI,UAAY,KACjBxI,EAAKuL,eAjGWvL,EAoGlB6L,UAAY,SAACJ,KAjGXzL,EAAK2K,cAAgB,KACrB3K,EAAK4K,eAAiB,KACtB5K,EAAK4L,gBAAkB5L,EAAK4L,gBAAgBpL,KAArB5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KAEvBA,EAAKwJ,qBAAqBhJ,KAA1B5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KACAA,EAAKwK,kBAAoBxK,EAAKwK,kBAAkBhK,KAAvB5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KACzBA,EAAKM,aAAeN,EAAKM,aAAaE,KAAlB5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KAEpBA,EAAKwL,WAAaxL,EAAKwL,WAAWhL,KAAhB5E,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAAoE,KAElBA,EAAKwI,UAAY,KAbDxI,wEA0GhB,IAAIwI,EAAY/M,KAAK+M,WAAa/M,KAAKC,MAAM8M,UAAU/M,KAAKC,MAAM8M,UAAUlD,OAAS,GAErF,OACEtH,EAAAjC,EAAAC,cAAC8P,GAAD,CACEtJ,QAAY/G,KAAKmQ,kBACjBpD,UAAcA,EACdlI,aAAiB7E,KAAK6E,aACtB2B,SAAaxG,KAAKC,MAAMuG,SACxBuH,qBAAyB/N,KAAK+N,8BApHJpN,aAgI5BoJ,GAAqB,CACzBlF,iBACAgK,oBACAyB,yBAGaxO,eAZS,SAACC,GAAD,MAAY,CAClCgF,QAAUhF,EAAMgF,QAChBP,SAAWzE,EAAM+M,gBACjB/B,UAAYhL,EAAMgL,UAAUhL,EAAM+M,mBASI/E,GAAzBjI,CAA6C2M,ICvI7C8B,GARc,kBAEzBhO,EAAAjC,EAAAC,cAAA,aCIEiQ,WAAWC,IAAKD,SAMhBE,GAAO,CACT,CACItG,MAAQ,gBACRvI,KAAO,IACPkE,KAAO,MACP4K,OAAShD,IAEb,CACIvD,MAAQ,cACRvI,KAAO,IACPkE,KAAO,OACP4K,OAASlC,IAEb,CACIrE,MAAQ,kBACRvI,KAAO,IACPkE,KAAO,SACP4K,OAASJ,KA0BFK,GAtBU,SAAAvN,GAAgCA,EAA9BwN,YAA8B,IAAjBC,EAAiBzN,EAAjByN,YAE9BC,EAAkBD,GAAsC,WAAvBA,EAAYrL,QAAuBqL,EAAYjP,KAEtF,OADA+B,QAAQC,IAAIkN,GAERxO,EAAAjC,EAAAC,cAACmQ,EAAA,EAAD,CACIhQ,UAAY,oBACZsQ,iBAAqBD,EACrBE,UAAcF,GAEZL,GAAKvM,IAAI,SAAA+M,GAAA,IAnCFC,EAAkBC,EAmCdvP,EAAFqP,EAAErP,KAAMkE,EAARmL,EAAQnL,KAAM4K,EAAdO,EAAcP,OAAQvG,EAAtB8G,EAAsB9G,MAAtB,OACP7H,EAAAjC,EAAAC,cAACiQ,GAAD,CACIhP,IAAQK,EACRwP,IAAO9O,EAAAjC,EAAAC,cAAA,YAAMgC,EAAAjC,EAAAC,cAAC+Q,EAAA,EAAD,CAAMzP,KAAQkE,IAApB,IAA+BqE,EAA/B,KACPzE,UAvCCwL,EAuCwBJ,EAvCNK,EAuCsBvP,EAtCzDsP,IAAqBC,IAuCL7O,EAAAjC,EAAAC,cAACoQ,EAAD,WC9CdY,oLACK,IAAAxR,EAE8BC,KAAKC,MAAlC4Q,EAFD9Q,EAEC8Q,YAAaC,EAFd/Q,EAEc+Q,YAErB,OACEvO,EAAAjC,EAAAC,cAACiR,GAAD,CACEX,YAAgBA,EAChBC,YAAgBA,WARWnQ,aAqBpBmB,eAPS,SAAAC,GAAK,MAAK,CAChC8O,YAAc9O,EAAM+M,gBACpBgC,YAAc/O,EAAMgF,QAAQhF,EAAM+M,mBAGT,KAEZhN,CAA6CyP,cClBtDE,8MAEJC,QAAU,kBAAMnP,EAAAjC,EAAAC,cAAA,OAAKG,UAAU,oCAAf,uFAId,OACE6B,EAAAjC,EAAAC,cAAA,OAAKG,UAAU,mBACb6B,EAAAjC,EAAAC,cAAC+H,EAAA,EAAD,KACE/F,EAAAjC,EAAAC,cAACiI,EAAA,EAAD,CAAKyF,GAAG,KAAKE,GAAG,KACd5L,EAAAjC,EAAAC,cAACoR,EAAD,QAIJpP,EAAAjC,EAAAC,cAAC+H,EAAA,EAAD,KACE/F,EAAAjC,EAAAC,cAACiI,EAAA,EAAD,CAAKyF,GAAG,KAAK2D,GAAG,KACdrP,EAAAjC,EAAAC,cAACsR,EAAD,QAIJtP,EAAAjC,EAAAC,cAAC+H,EAAA,EAAD,CAAKiG,QAAU,SAAS9F,KAAQ,IAC9BlG,EAAAjC,EAAAC,cAACiI,EAAA,EAAD,KACEjG,EAAAjC,EAAAC,cAACuR,GAAD,QAIJvP,EAAAjC,EAAAC,cAAC+H,EAAA,EAAD,CAAKiG,QAAU,SAAS9F,KAAQ,IAC9BlG,EAAAjC,EAAAC,cAACiI,EAAA,EAAD,KACEjG,EAAAjC,EAAAC,cAACT,GAAA,QAAD,gBA5BYa,aAoCT8Q","file":"static/js/4.ab6e8b07.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nclass DefaultFooter extends Component {\r\n  render() {\r\n\r\n    // eslint-disable-next-line\r\n    const { children, ...attributes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <span><a href=\"https://coreui.io\">CoreUI</a> &copy; 2018 creativeLabs.</span>\r\n        <span className=\"ml-auto\">Powered by <a href=\"https://coreui.io/react\">CoreUI for React</a></span>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDefaultFooter.propTypes = propTypes;\r\nDefaultFooter.defaultProps = defaultProps;\r\n\r\nexport default DefaultFooter;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Icon } from 'antd'\r\n\r\nconst authorizationHook = WrapComponent => {\r\n    class authorizationComponent extends Component{\r\n        render(){\r\n\r\n            const authorized = this.props.isSuperuser\r\n            \r\n            return(\r\n                authorized && <WrapComponent {...this.props} /> || <Icon type = 'loading' />\r\n            )\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = state => ({\r\n        isSuperuser : state.data_user.role\r\n    })\r\n\r\n    return connect(mapStateToProps, null)(authorizationComponent)\r\n}\r\n\r\nexport default authorizationHook\r\n","import React from 'react'\r\nimport './../index.sass'\r\nimport { Input, Select } from 'antd'\r\n\r\nconst Search = Input.Search\r\nconst Option = Select.Option\r\n\r\n\r\nconst TypesDevice = (\r\n    <Select \r\n        defaultValue = 'G'>\r\n        <Option value = 'G'>\r\n            G\r\n        </Option>\r\n        <Option value = 'P'>\r\n            P\r\n        </Option>\r\n        <Option value = 'M'>\r\n            M\r\n        </Option>\r\n    </Select>\r\n)\r\n\r\nconst SearchField = props => (    \r\n        <Search \r\n            id = 'SearchFieldDevice'\r\n            style = {{width: 500, marginBottom: 20}}\r\n            size = 'large'\r\n            onChange = { props.handleFilter }\r\n            placeholder = 'Introduce el serial de dipositivo'\r\n        />\r\n)\r\n\r\nexport default SearchField","import React from 'react'\r\nimport { Select } from 'antd';\r\n\r\nconst Option = Select.Option\r\n\r\nconst envolveTd = data => (\r\n    <td>\r\n        {data}\r\n    </td>\r\n)\r\n\r\nconst createOption = (data, styles) => (\r\n    <Option\r\n        value = { data }\r\n        style = { styles }    \r\n    >\r\n        {data}\r\n    </Option>\r\n)\r\n\r\nconst envolveSelect = (data, forDefault) => (\r\n    <Select\r\n        style = {{ width : 120 }}\r\n        defaultValue = { forDefault }\r\n        name=\"status\"       \r\n        className=\"status\"\r\n    >\r\n\r\n    { data }\r\n\r\n    </Select>\r\n)\r\n\r\nexport const Item = ({type, values, forDefault = null, optionStyle = null}) => {\r\n    var toRender = null\r\n    \r\n    console.log(values)\r\n    if(type === 'simple' && typeof values === 'string')\r\n        toRender = envolveTd(values)\r\n        \r\n\r\n    if(type === 'select' && Array.isArray(values) && forDefault){\r\n        \r\n        let valueToSelect = values.map(value => {\r\n            let option = createOption(value, optionStyle)\r\n\r\n            return option\r\n        })\r\n\r\n        let toSelect = envolveSelect(valueToSelect, forDefault)\r\n\r\n        toRender = envolveTd(toSelect)\r\n    }\r\n\r\n    return toRender\r\n}","import React, { Component } from 'react'\r\nimport { Button, Select } from 'antd'\r\nimport authorizationHook from '../../../../hooks/authorizationHook'\r\nimport { Item } from './Item'\r\n\r\nconst Option = Select.Option\r\n\r\nconst optionStyle = {\r\n  width : '100px'\r\n}\r\n\r\nclass DeviceItemTable extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.getItemChildrenLayoutRenderDevice = this.getItemChildrenLayoutRenderDevice.bind(this)\r\n\r\n    this.getDataOptionDevice = this.getDataOptionDevice.bind(this)\r\n    this.getDataColumnsDevice = this.getDataColumnsDevice.bind(this)\r\n\r\n    this.handleClick = this.handleClick.bind(this)\r\n  }\r\n\r\n  getDataOptionDevice(){\r\n    \r\n    const { name } = this.props \r\n\r\n    return (\r\n      <Option \r\n        key = { name }\r\n        value = { name }\r\n        >\r\n        { name }\r\n      </Option>\r\n    )\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { name, selectDevice } = this.props\r\n    \r\n    selectDevice(name)\r\n  }\r\n\r\n  getDataColumnsDevice(){\r\n\r\n    const { data, name } = this.props \r\n\r\n    const selectOperation = (status) => (\r\n      <td>\r\n          <Select\r\n            style = {{ width : 120 }}\r\n            defaultValue = {data.status === 'H'?\"ACTIVE\":\"INACTIVE\"}\r\n            name=\"status\"       \r\n            id=\"status\">\r\n\r\n              <Option\r\n                style = { optionStyle }\r\n                value=\"ACTIVE\">ACTIVO\r\n              </Option>\r\n\r\n              <Option\r\n                style = { optionStyle }\r\n                value=\"INACTIVE\">INACTIVO\r\n              </Option>\r\n          </Select>\r\n        </td>\r\n    )\r\n\r\n    const SelectOp = authorizationHook(Item)\r\n\r\n    return(\r\n\r\n      <>\r\n        <Item\r\n          type = 'simple' \r\n          values = { name }  \r\n        />\r\n        <Item\r\n          type = 'simple' \r\n          values = { data.typee }  \r\n        />\r\n        <Item\r\n          type = 'simple' \r\n          values = { data.date_register }  \r\n        />\r\n\r\n        <SelectOp \r\n          type = 'select'\r\n          forDefault = {data.status}\r\n          optionStyle = {{ width : '100px' }}\r\n          values = { ['ACTIVO', 'INACTIVO'] }\r\n        />\r\n        \r\n\r\n        <td>\r\n          <Button \r\n            disabled = { data.status === 'ACTIVO' ? false : true}\r\n            onClick = { this.handleClick }\r\n            style = {{ background : 'none', border: 'none'}}\r\n            icon = 'eye' />\r\n        </td>\r\n      </>\r\n    )\r\n  }\r\n\r\n  getItemChildrenLayoutRenderDevice(){\r\n   \r\n    return this.props.type === 'row-table'\r\n      ? this.getDataColumnsDevice()\r\n      : this.getDataOptionDevice()\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.type)\r\n    const data_render = this.getItemChildrenLayoutRenderDevice() \r\n \r\n    return (\r\n      <>{ data_render }</>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DeviceItemTable\r\n","import React, { Component } from 'react'\r\nimport { Table } from 'reactstrap'\r\nimport { Header as _Header } from './Header'\r\nimport { Body as _Body } from './Body'\r\n\r\nconst TableLayout = ({ children }) => (\r\n    <Table responsive striped>\r\n        { children }\r\n    </Table>\r\n)\r\n\r\nTableLayout.Header = _Header\r\nTableLayout.Body = _Body\r\n\r\nexport default TableLayout ","import React from 'react'\r\n\r\nconst Header = ({ children }) => (\r\n    <thead>\r\n        <tr> \r\n            { children }\r\n        </tr>\r\n  </thead>\r\n)\r\n\r\nexport { Header }","import React from 'react'\r\n\r\nconst Body = ({ children }) => (\r\n    <tbody>\r\n        { children }        \r\n    </tbody>\r\n)\r\n\r\nexport { Body }","import React from 'react'\r\nimport { Select } from 'antd'\r\nconst Option = Select.Option\r\n\r\nconst DropdownLayout = (props) => {\r\n\r\n    return(\r\n        <Select\r\n            onChange = { props.selectDevice }\r\n            name = 'select-device'\r\n            id = 'select-device'\r\n            defaultValue = { props.selected }>\r\n            { props.children }\r\n        </Select>\r\n    )\r\n}\r\n\r\nexport default DropdownLayout","import React, { PureComponent } from 'react'\r\nimport DeviceItemTable from './DeviceItemTable'\r\nimport TableLayout from './layouts/TableLayout'\r\nimport { Select } from 'antd'\r\nimport DropdownLayout from './layouts/DropdownLayout'\r\n\r\nclass DeviceList extends PureComponent {\r\n\r\n  constructor(props){\r\n\r\n    super(props)\r\n\r\n    this.getColumnsDevices = this.getColumnsDevices.bind(this)\r\n    this.columnOperation = this.columnOperation.bind(this)\r\n\r\n    this.getDevices = this.getDevices.bind(this)\r\n    this.deviceOperation = this.deviceOperation.bind(this)\r\n\r\n    this.getTable = this.getTable.bind(this)\r\n    this.getSelect = this.getSelect.bind(this)\r\n\r\n    this.getItem = this.getItem.bind(this)\r\n  }\r\n\r\n  getColumnsDevices = () => (\r\n    this.props.columns_header && this.props.columns_header.map(this.columnOperation)\r\n  )\r\n\r\n  columnOperation = column => (<th key = {column}>{ column }</th>)\r\n\r\n  getDevices = () => (\r\n    this.props.devices && this.props.devices.map(this.deviceOperation)\r\n  )\r\n\r\n  getSimpleList = (devices_name) => (\r\n    <Select.Option value = { devices_name }>{ devices_name }</Select.Option>\r\n  )\r\n\r\n  getItem = device => {\r\n    return(\r\n      this.props.type === 'table' ?<DeviceItemTable\r\n          selectDevice = { this.props.selectDevice } \r\n          key = { device[0] } \r\n          name = { device[0] }\r\n          data = { device[1] }\r\n          type = { 'row-' + this.props.type }  \r\n        />: this.getSimpleList(device[0])\r\n    )\r\n  }\r\n\r\n  deviceOperation = device => {\r\n    let Item = null\r\n   \r\n    if(!this.props.filter || (device[0][0] === this.props.filter))\r\n      Item = this.getItem(device)\r\n\r\n    return this.props.type  === 'table'\r\n      ? <tr>{ Item }</tr>\r\n      : Item\r\n  }\r\n\r\n  getTable = TableLayout => (\r\n    <TableLayout>\r\n      <TableLayout.Header>\r\n        { this.getColumnsDevices() }\r\n      </TableLayout.Header>\r\n      <TableLayout.Body>\r\n        { this.getDevices() }\r\n      </TableLayout.Body>\r\n    </TableLayout>\r\n  )\r\n\r\n  getSelect = DropdownLayout => (\r\n    <DropdownLayout\r\n      selectDevice = { this.props.selectDevice }\r\n      selected = { this.props.selected }\r\n      >\r\n      { this.getDevices() }\r\n    </DropdownLayout>\r\n  )\r\n\r\n  render() {\r\n    \r\n    let Data = null\r\n  \r\n    if(this.props.type === 'table')\r\n\r\n      Data = this.getTable(TableLayout)\r\n\r\n    else if(this.props.type === 'select')\r\n  \r\n      Data = this.getSelect(DropdownLayout)\r\n         \r\n    return (  \r\n      <>{ Data }</>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DeviceList\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\n\r\nconst ButtonsOperation = ({ icon, color, value, onClick, type, fontColor }) => (\r\n    <Button\r\n        style = {{ backgroundColor : color, color : fontColor, borderColor: color }}\r\n        size = 'large'\r\n        type = { type }\r\n        icon = { icon }\r\n        onClick = { onClick }\r\n        >\r\n    \r\n        { value }\r\n    </Button>\r\n)\r\n\r\nexport default ButtonsOperation\r\n","import React, { Component } from 'react'\r\n\r\nimport SearchComponent from './FieldSearch'\r\nimport DeviceList from './DeviceList'\r\nimport { Card, CardHeader, CardBody } from 'reactstrap'\r\nimport ButtonOperation from './ButtonsOperation'\r\nimport { Row, Col } from 'antd'\r\n\r\nimport  { DEVICES } from './../../constants/withPanel'\r\n\r\nclass DeviceSection extends Component {\r\n\r\n  constructor(props){\r\n\r\n    super(props)\r\n\r\n    this.getButtonsOperations = this.getButtonsOperations.bind(this)\r\n    this.getCardTable = this.getCardTable.bind(this)\r\n    this.handleClickRegister = this.handleClickRegister.bind(this)\r\n    this.getColums = this.getColums.bind(this)\r\n  }\r\n\r\n  getColums = () => (\r\n    this.props.role\r\n      ? [\r\n        'Codigo',\r\n        'Tipo',\r\n        'Fecha de registro',\r\n        'Estado',\r\n        ''\r\n      ]\r\n\r\n      : [\r\n        'Codigo',\r\n        'Tipo',\r\n        'Fecha de registro',\r\n        ''\r\n      ]\r\n  )\r\n\r\n  handleClickRegister = () => (\r\n    this.props.visible_form \r\n        ? this.props.setVisibleForm(false)\r\n        : this.props.setVisibleForm(true)\r\n  )\r\n\r\n  getButtonsOperations = () => (\r\n    <Row gutter = { 10 }>\r\n      <Col span = { 4 }>\r\n        <ButtonOperation \r\n          value = 'Registrar'\r\n          icon = \"plus-circle\"\r\n          color = \"ghost-primary\"\r\n          onClick = { this.handleClickRegister }\r\n          type = 'primary'\r\n        />\r\n      </Col>\r\n      <Col span = { 4 }>\r\n        <ButtonOperation \r\n          value = 'Comprar'\r\n          icon = \"shopping\"\r\n          color = \"#fadb14\"\r\n          fontColor = 'black'\r\n          onClick = { null }\r\n          type = 'primary'\r\n        />\r\n      </Col>\r\n    </Row>\r\n  )\r\n  \r\n  getCardTable = () => {\r\n\r\n    const { devices } = this.props\r\n\r\n    return(\r\n      <Card style = {{ width : '1000px', margin : 'auto' }}>\r\n        <CardHeader>\r\n          Dispositivos Registrados\r\n        </CardHeader>\r\n        <CardBody>   \r\n            <SearchComponent handleFilter = { this.props.handleChangeSearch } />        \r\n          <DeviceList\r\n            columns_header = { this.getColums() }\r\n            devices = { devices }\r\n            type = 'table'\r\n            selectDevice = { this.props.selectDevice }\r\n          />\r\n          { this.getButtonsOperations() }\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  render(){\r\n\r\n    const card = this.props.visible\r\n      ? this.getCardTable()\r\n      : this.getButtonsOperations()\r\n\r\n    return(\r\n      <>{ card }</>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DeviceSection","import React, { Component } from 'react'\r\nimport DeviceSection from './../../components/DeviceSection'\r\nimport { connect } from 'react-redux'\r\nimport { DEVICES, URL_DEVICE } from './../../constants/withPanel'\r\nimport {\r\n    setFilterSearchDevice,\r\n    setVisibleForm,\r\n    setDevices,\r\n    selectDevice,\r\n    getDevicesFromServer\r\n} from './../../actions/DeviceActions'\r\n\r\nimport toPairs from 'lodash.topairs'\r\n\r\nclass SectionDevicesView extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.device)\r\n            this.props.getDevicesFromServer()\r\n    } \r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.handleChangeSearch = this.handleChangeSearch.bind(this)\r\n\r\n        this.getDevices = this.getDevices.bind(this)\r\n    }\r\n\r\n    handleChangeSearch = ({ target }) => {\r\n        let { value } = target\r\n    \r\n        this.props.setFilterSearchDevice(value)\r\n    }\r\n\r\n    isDeviceInList = (device) => {\r\n\r\n        const regex = this.props.filter_search.toUpperCase()\r\n        return device[0].search(regex) > -1\r\n    }\r\n\r\n    getDevices = () => (\r\n        toPairs(this.props.devices)\r\n    )\r\n\r\n    render() {\r\n        \r\n        let filter = this.props.filter_search\r\n        let devices = ( filter === '' && this.getDevices())\r\n            || (filter !== '' && this.getDevices().filter(this.isDeviceInList))\r\n\r\n        let visible = this.getDevices().length > 0 ? true : false\r\n\r\n        return (\r\n            <DeviceSection\r\n                role = { this.props.role }\r\n                devices = { devices }\r\n                handleChangeSearch = { this.handleChangeSearch }   \r\n                visible_form = { this.props.visible_form }\r\n                setVisibleForm = { this.props.setVisibleForm }\r\n                visible = { visible }\r\n                selectDevice = { this.props.selectDevice }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    role : state.data_user.role,\r\n    devices : state.devices,\r\n    filter_search : state.filter_search,\r\n    visible_form : state.visible_form_device,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setFilterSearchDevice,\r\n    setVisibleForm,\r\n    setDevices,\r\n    selectDevice,\r\n    getDevicesFromServer\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SectionDevicesView)\r\n","import React from 'react'\r\nimport { Form, Input, Select, Button, Tooltip } from 'antd'\r\nimport './styles.sass'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\nconst description_type = \r\n        \"Tipo de dispositivo\\n\\G : valor en modulo\\n\\P = valor en mapa\\n\\S = seguimientos\"\r\n\r\nconst type_in_serial = (\r\n    <Tooltip title = { description_type }>\r\n        <Select defaultValue = 'G'>\r\n            <Option value = 'G'>G</Option>\r\n            <Option value = 'P'>P</Option>\r\n            <Option value = 'S'>S</Option>\r\n        </Select>\r\n    </Tooltip>\r\n)\r\n\r\nconst FormDevice = ({ onHandleSubmit }) => (\r\n    <Form className = 'register-device'\r\n        onSubmit = { onHandleSubmit }\r\n        \r\n    >\r\n        <Item>\r\n            <Input\r\n                name = 'input-create-device'\r\n                type = 'text'\r\n                maxLength = { 4 }\r\n                placeholder = 'Serial'\r\n            />\r\n        </Item>\r\n\r\n        <Item>\r\n            <Button\r\n                htmlType = 'submit' >\r\n                Registrar\r\n            </Button>\r\n        </Item>\r\n    </Form>\r\n  \r\n)\r\n\r\nexport default Form.create()(FormDevice)\r\n","import React, { Component } from 'react'\r\nimport { Modal, Row, Col } from 'antd'\r\nimport FormDevice from './FormDevice'\r\n\r\nexport default class SectionDeviceRegister extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.onCancel = this.onCancel.bind(this) \r\n  }\r\n\r\n  onCancel = () => {\r\n    this.props.setVisibleForm(false)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        width = '500px'\r\n        centered\r\n        visible = { this.props.visible_form }\r\n        footer = { null }\r\n        onCancel = { this.onCancel }\r\n        > \r\n        <h3>Registra un dispositivo</h3>\r\n        <Row align = 'center'>\r\n          <Col span = { 20 }>\r\n            <FormDevice onHandleSubmit = { this.props.onSubmitDevice }/>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport SectionDeviceRegister from './../../components/SectionDeviceRegister'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n    setVisibleForm,\r\n    fetchCreateDevice\r\n} from './../../actions/DeviceActions'\r\n\r\nclass FormDeviceView extends React.Component{\r\n  onSubmitDevice = (e) => {\r\n    \r\n    e.preventDefault()\r\n    \r\n    let device = document.getElementsByName('input-create-device')[0].value\r\n    console.log(\"contenido de input : \" + device)\r\n    this.props.fetchCreateDevice(device)\r\n\r\n  }\r\n\r\n  render(){\r\n    return(\r\n        <SectionDeviceRegister\r\n            visible_form = { this.props.visible_form }\r\n            setVisibleForm = { this.props.setVisibleForm }\r\n            onSubmitDevice = { this.onSubmitDevice }\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    visible_form : state.visible_form_device,\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setVisibleForm,\r\n    fetchCreateDevice\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDeviceView)\r\n","import React from 'react'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { renderToStaticMarkup } from 'react-dom/server'\r\nimport { divIcon } from 'leaflet'\r\nimport { \r\n    faMapMarker,\r\n    faTabletAlt\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport RandomColor from 'randomcolor'\r\n\r\nlibrary.add(faMapMarker)\r\nlibrary.add(faTabletAlt)\r\n\r\nconst stylesCenter = { \r\n    position: 'absolute',\r\n    left : '1px',\r\n    bottom : '250%'\r\n}\r\n\r\nconst styleMarker = {\r\n    position : 'absolute',\r\n    bottom : '100%',\r\n    left : '-7px'\r\n}\r\n\r\nconst colorMarker = RandomColor()\r\n\r\nconst IconMarker = (\r\n    <div>\r\n        <FontAwesomeIcon\r\n            icon = { faMapMarker }\r\n            color = { colorMarker }\r\n            size = '3x'\r\n            style = { styleMarker }\r\n        />\r\n           <FontAwesomeIcon\r\n            icon = { faTabletAlt }\r\n            color = 'white'\r\n            size = '1x'\r\n            style = { stylesCenter }\r\n        />\r\n     \r\n    </div>\r\n)\r\n\r\nconst iconMarkup = renderToStaticMarkup(IconMarker)\r\nconst optionRender = divIcon({\r\n    html: iconMarkup,\r\n})\r\n\r\nexport default optionRender","import React from 'react'\r\nimport { Map, TileLayer, Marker, Popup, Polyline } from 'react-leaflet'\r\nimport IconMarker from './IconMarker'\r\n\r\nimport 'leaflet/dist/leaflet.css'\r\n\r\n\r\n\r\nconst MapDevices = ({ positions }) => {\r\n    \r\n    let last_index = null\r\n    let position = null\r\n\r\n    if (Array.isArray(positions)){\r\n        last_index = positions.length - 1\r\n        position = positions[last_index]\r\n    }else\r\n        position = positions\r\n\r\n    const coordenate = positions && [position.lat, position.lon]\r\n    \r\n    return(\r\n        <Map\r\n            className = 'map element-operation'\r\n            center = { coordenate || [51.0009, -0.0009] }\r\n            zoom = { 13 }>\r\n\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n\r\n            <Marker \r\n                icon = { IconMarker }\r\n                position = { coordenate }>\r\n                 <Popup>A pretty CSS3 popup.<br />Easily customizable.</Popup>\r\n            </Marker>\r\n\r\n            <Polyline\r\n                positions = {positions}\r\n                color = '#F9B451'\r\n            />\r\n        </Map>\r\n    )\r\n}\r\n\r\nexport default MapDevices","import React from 'react'\r\nimport Map from './../../components/Map'\r\nimport { Row, Col } from 'antd'\r\n\r\nconst SectionValueToMap = () => {\r\n  return (\r\n    <div>\r\n      <Row gutter = { 24 }>\r\n        <Col span = { 20 } offset = { 4}>\r\n          <Map />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SectionValueToMap\r\n","import React from 'react'\r\nimport { Input, Button, Row, Col } from 'antd'\r\nimport DeviceList from './../../DeviceSection/DeviceList'\r\n\r\nconst panelOptions = ({ devices, selected, handleChangeDateTime, selectDevice }) => {\r\n  \r\n  return (\r\n    <div className = 'panel-options element-operation'>\r\n      <DeviceList \r\n        type = 'select'\r\n        devices = { devices }\r\n        selectDevice = { selectDevice }\r\n        selected = { selected }\r\n        filter = 'S'\r\n      />\r\n      <Row gutter = { 15 } >\r\n        <Col span = { 3 }>\r\n          <label htmlFor = 'fi'>Inicio</label>\r\n        </Col>\r\n        <Col offset = { 3 }>\r\n          <Input\r\n              id = 'fi'\r\n              name = 'fi'\r\n              className = 'input-panel-operation'\r\n              onChange = { handleChangeDateTime }\r\n              type = 'datetime'\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row  gutter = { 15 } >\r\n        <Col  span = { 3 } >\r\n          <label htmlFor = 'ff'>Final</label>\r\n        </Col>\r\n        <Col offset = { 3 }>\r\n          <Input\r\n              id = 'ff'\r\n              name = 'ff'\r\n              className = 'input-panel-operation'\r\n              \r\n              onChange = { handleChangeDateTime }\r\n              type = 'datetime'\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n        <Button>Agregar Rango</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default panelOptions\r\n","import React from 'react'\r\nimport Map from './../../../components/Map'\r\nimport PanelOptions from './panelOptions'\r\nimport { Row, Col } from 'antd'\r\n\r\nconst map = {\r\n  xs : 24,\r\n  md : 24,\r\n  lg : 12,\r\n  xl : 16\r\n}\r\n\r\nconst panel = {\r\n  xs : 24,\r\n  md : 24,\r\n  lg : 12,\r\n  xl : 8\r\n}\r\n\r\n\r\nconst SectionTracking = ({ devices, positions, selected, handleChangeDateTime, selectDevice }) => {\r\n\r\n  return (\r\n    <div>\r\n      <Row gutter = { 24 } justify = 'space-between' align = 'center' >\r\n        <Col { ...panel }>\r\n          <PanelOptions\r\n            handleChangeDateTime = { handleChangeDateTime }\r\n            selected = { selected }\r\n            selectDevice = { selectDevice }\r\n            devices = { devices }\r\n          /> \r\n        </Col>\r\n        <Col { ...map }>\r\n           { positions && <Map positions = { positions } />}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default SectionTracking\r\n","import React, { Component } from 'react'\r\nimport SectionTracking from './../../../../components/OperationSection/SectionTracking'\r\nimport { connect } from 'react-redux'\r\nimport toPairs from 'lodash.topairs'\r\nimport { POSITIONS } from './../../../../constants/withPanel'\r\nimport { \r\n  selectDevice,\r\n  getLastPosition,\r\n  getIntervalPosition\r\n} from './../../../../actions/DeviceActions'\r\n\r\nclass SectionTrackingView extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.firstDateTime = null\r\n    this.secondDateTime = null\r\n    this.getArrayDevices = this.getArrayDevices.bind(this)\r\n\r\n    this.handleChangeDateTime.bind(this)\r\n    this.validateRangeDate = this.validateRangeDate.bind(this)\r\n    this.selectDevice = this.selectDevice.bind(this)\r\n\r\n    this.validInput = this.validInput.bind(this)\r\n\r\n    this.positions = null\r\n  }\r\n\r\n  componentWillMount = (prevProps, nextProps) => {\r\n   console.log(prevProps)\r\n   console.log(nextProps)\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.getLastPosition(this.props.device_selected)\r\n  }\r\n\r\n  validateRangeDate = () => {\r\n\r\n    const regex = new RegExp(\"^([0-2][0-9]|3[0-1])/(0[1-9]|1[0-2])/(2[0-9]{3}) ([0-1][0-9]|2[0-3]):([0-5][0-9])$\")\r\n    \r\n    if(regex.test(this.firstDateTime) && regex.test(this.secondDateTime)){\r\n       \r\n      this.setDeviceRanges()\r\n\r\n      return true\r\n    }else\r\n      return false\r\n    \r\n  }\r\n\r\n  obtainDate = date => (\r\n    new Date(date[0], date[1], date[2], date[3], date[4])\r\n  )\r\n  obtainSplitDate = (date, regex) => (\r\n    date.split(regex)\r\n  )\r\n\r\n  setDeviceRanges = () => {\r\n\r\n    const regex = new RegExp('[/ :]')\r\n\r\n      this.positions = this.props.positions.filter(position => {\r\n      \r\n      let a = this.obtainSplitDate(position.datetime, regex)\r\n      \r\n      let datePosition = this.obtainDate(a)\r\n\r\n      a = this.obtainSplitDate(this.firstDateTime, regex)\r\n\r\n      let first = this.obtainDate(a)\r\n\r\n      a = this.obtainSplitDate(this.secondDateTime, regex)\r\n\r\n      let final = this.obtainDate(a)\r\n  \r\n      return (first <= datePosition && final >= datePosition)\r\n    })\r\n\r\n    this.forceUpdate()\r\n  }\r\n\r\n  validInput = () => (\r\n    this.firstDateTime && this.secondDateTime\r\n  )\r\n\r\n  handleChangeDateTime = (evt) => {\r\n    \r\n    evt.target.name === 'fi'\r\n      ? this.firstDateTime = evt.target.value\r\n      : this.secondDateTime = evt.target.value\r\n  \r\n    let isFullInputsDate = this.validInput()\r\n    let isValidRangeDates = this.validateRangeDate()\r\n    \r\n    if(isFullInputsDate)\r\n      this.positions = null\r\n\r\n    if(isFullInputsDate && isValidRangeDates)\r\n      this.setDeviceRanges()\r\n  }\r\n\r\n  getArrayDevices = () => (\r\n    toPairs(this.props.devices)\r\n  )\r\n\r\n  selectDevice = value => {\r\n    this.props.selectDevice(value)\r\n    this.positions = null\r\n    this.forceUpdate()\r\n  }\r\n\r\n  addRanges = (evt) => {\r\n\r\n  }\r\n\r\n  render() {\r\n   \r\n    let positions = this.positions || this.props.positions[this.props.positions.length - 1]\r\n  \r\n    return (\r\n      <SectionTracking\r\n        devices = { this.getArrayDevices() }\r\n        positions = { positions }\r\n        selectDevice = { this.selectDevice }\r\n        selected = { this.props.selected }\r\n        handleChangeDateTime = { this.handleChangeDateTime }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  devices : state.devices,\r\n  selected : state.device_selected,\r\n  positions : state.positions[state.device_selected],\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  selectDevice,\r\n  getLastPosition,\r\n  getIntervalPosition\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SectionTrackingView)\r\n","import React from 'react'\r\n\r\nconst SectionValueInModule = () => (\r\n\r\n    <div>\r\n      \r\n    </div>\r\n\r\n)\r\n\r\nexport default SectionValueInModule\r\n","import React from 'react'\r\nimport { Tabs, Icon } from 'antd'\r\nimport SectionValueToMap from './SectionValueToMap'\r\nimport SectionTrackingView from './../../views/UserInterfacePage/OperationSectionView/SectionTrackingView'\r\nimport SectionValueInModule from './SectionValueInModule'\r\n\r\nimport './styles.css'\r\n\r\nconst TabPane  = Tabs.TabPane\r\n\r\nconst getDisabled = (default_activate, type_device) => (\r\n    default_activate !== type_device? true : false\r\n)\r\n\r\nconst tabs = [\r\n    {\r\n        title : 'Valor en mapa',\r\n        type : 'M',\r\n        icon : 'eye',\r\n        Module : SectionValueToMap\r\n    },\r\n    {\r\n        title : 'Seguimiento',\r\n        type : 'S',\r\n        icon : 'fall',\r\n        Module : SectionTrackingView\r\n    },\r\n    {\r\n        title : 'Valor en Modulo',\r\n        type : 'G',\r\n        icon : 'tablet',\r\n        Module : SectionValueInModule\r\n    }\r\n]\r\n\r\nconst OperationSection = ({device_name, data_device}) => {\r\n\r\n    const defaultTabPane = (data_device && data_device.status === 'ACTIVE' && data_device.type)\r\n    console.log(defaultTabPane)\r\n    return(\r\n        <Tabs \r\n            className = 'operation-section'\r\n            defaultActiveKey = { defaultTabPane } \r\n            activeKey = { defaultTabPane } \r\n        >                \r\n            { tabs.map(({type, icon, Module, title}) => (\r\n                <TabPane\r\n                    key = { type } \r\n                    tab = {<span><Icon type = {icon} /> { title } </span>}\r\n                    disabled = { getDisabled(defaultTabPane, type) } >\r\n                    <Module />\r\n                </TabPane>\r\n            )) }\r\n        </Tabs>\r\n    )\r\n}\r\n\r\nexport default OperationSection\r\n\r\n","import React, { Component } from 'react'\r\nimport OperationSection from './../../../components/OperationSection'\r\nimport { connect } from 'react-redux';\r\n\r\nclass OperationSectionView extends Component {\r\n  render() {\r\n\r\n    const { device_name, data_device } = this.props\r\n \r\n    return (\r\n      <OperationSection\r\n        device_name = { device_name }\r\n        data_device = { data_device }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  device_name : state.device_selected,\r\n  data_device : state.devices[state.device_selected]\r\n})\r\n\r\nconst mapDispatchToProps = null\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OperationSectionView)\r\n","import React, { Component} from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport DeviceSectionView from './../../views/UserInterfacePage/SectionDevicesView'\r\nimport DeviceRegisterView from './../../views/UserInterfacePage/FormDeviceView'\r\nimport OperationSectionView from './../../views/UserInterfacePage/OperationSectionView'\r\nimport Footer from './../UserInterface/DefaultFooter'\r\n\r\nclass Dashboard extends Component {\r\n  \r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          <Col xs=\"12\" lg=\"0\">\r\n            <DeviceSectionView />\r\n          </Col>           \r\n        </Row>\r\n       \r\n        <Row>\r\n          <Col xs=\"12\" sm=\"6\">\r\n            <DeviceRegisterView />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row justify = 'center' span = {20}>\r\n          <Col>\r\n            <OperationSectionView />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row justify = 'center' span = {20}>\r\n          <Col>\r\n            <Footer />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;"],"sourceRoot":""}